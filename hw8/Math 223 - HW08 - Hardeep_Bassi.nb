(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    192605,       3728]
NotebookOptionsPosition[    189912,       3675]
NotebookOutlinePosition[    190325,       3691]
CellTagsIndexPosition[    190282,       3688]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Math 223: Homework 8", "Title",
 CellChangeTimes->{{3.819477029542458*^9, 3.8194770325147047`*^9}, {
  3.8895321257584968`*^9, 
  3.889532125835516*^9}},ExpressionUUID->"197654a4-4d8f-4ad2-acd2-\
0426bba106a8"],

Cell["Hardeep Bassi", "Author",
 CellChangeTimes->{{3.819477041266364*^9, 3.81947704456911*^9}, {
  3.889532127899108*^9, 
  3.8895321337562532`*^9}},ExpressionUUID->"47fdc244-5ee2-4b42-93c3-\
40f677fdf9ef"],

Cell["04/07/2023", "Affiliation",
 CellChangeTimes->{{3.8194774638175488`*^9, 3.819477466618027*^9}, {
  3.8895321399241257`*^9, 
  3.8895321419200673`*^9}},ExpressionUUID->"581392a7-3011-4211-898e-\
5aefcdf8effb"],

Cell[CellGroupData[{

Cell["Problem 1", "Section",
 CellChangeTimes->{{3.8194770755713477`*^9, 
  3.8194770765366144`*^9}},ExpressionUUID->"3b0f5f64-fd7d-4b7d-9281-\
4b7c9c73d5a2"],

Cell[TextData[{
 "Find the asymptotic behavior of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "2"], 
         RowBox[{"(", 
           RowBox[{"sin", 
             StyleBox["t", "TI"], "+", 
             StyleBox["t", "TI"]}], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{"i", 
            StyleBox["x", "TI"], 
            StyleBox["t", "TI"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{2}(\\text{sin}t + t)e^{\\text{i}xt}dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "da7f98e6-bde0-4b58-bc38-b1f9cc812d18"],
 ", as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "39e65fc1-42fd-48bd-90c7-e67f34188c16"],
 " up to terms involving ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           StyleBox["x", "TI"], "2"]], "."}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\frac{1}{x^2}.", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "01ed5867-2dab-416d-a02a-484977a717ec"],
 "\nFrom lecture, we know that integration by parts works well on ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[LongEqual]", 
         SubsuperscriptBox["\[Integral]", 
          StyleBox["a", "TI"], 
          StyleBox["b", "TI"]], 
         StyleBox["f", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"], "\[Phi]", 
            RowBox[{"(", 
              StyleBox["t", "TI"], ")"}]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "I(x) = \\int_{a}^{b}f(t)e^{ix\\phi(t)}dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "907b4a48-eae9-47c6-bf12-cabe6777f1df"],
 "\nwhen ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Phi]", "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\phi(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9438c83a-bb97-4ffb-92f4-9ad02ad15b7b"],
 "is monotonic on the given interval. Since ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Phi]", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\phi(t) = t", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c0b43a10-11f5-4f8f-a255-a9f197ff82b9"],
 ", we satisfy this criterion, hence we obtain:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[Tilde]", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["n", "TI"], "\[LongEqual]", "0"}], "\[Infinity]", 
          LimitsPositioning -> True], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", "-1", ")"}], 
           StyleBox["n", "TI"]], 
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{
               StyleBox["i", "TI"], 
               StyleBox["x", "TI"]}], ")"}], 
           RowBox[{
             StyleBox["n", "TI"], "+", "1"}]]], 
         RowBox[{"[", 
           RowBox[{
             SuperscriptBox[
              StyleBox["f", "TI"], 
              StyleBox["n", "TI"]], 
             RowBox[{"(", 
               StyleBox["b", "TI"], ")"}], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"], 
                StyleBox["b", "TI"]}]], "-", 
             SuperscriptBox[
              StyleBox["f", "TI"], 
              StyleBox["n", "TI"]], 
             RowBox[{"(", 
               StyleBox["a", "TI"], ")"}], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"], 
                StyleBox["a", "TI"]}]]}], "]"}], ",", 
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "I(x) \\sim \\sum_{n=0}^{\\infty}\\frac{(-1)^n}{(ix)^{n+1}}[f^n(b) \
e^{ixb} - f^n(a)e^{ixa}], x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1ecffc45-78b6-4435-92f5-91ba3bfafd59"],
 ". Using this formula for the first two terms yields:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[Tilde]", 
         FractionBox["1", 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"]}]], 
         RowBox[{"(", 
           RowBox[{"sin", 
             RowBox[{"(", "2", ")"}], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{"2", 
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"]}]], "-", "2", 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{"2", 
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"]}]]}], ")"}], "-", 
         FractionBox["1", 
          SuperscriptBox[
           StyleBox["x", "TI"], "2"]], 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"(", 
               RowBox[{"cos", 
                 RowBox[{"(", "2", ")"}], "+", "1"}], ")"}], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{"2", 
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"]}]], "+", "2"}], ")"}]}], TraditionalForm],
      "errors" -> {}, "input" -> 
     "I(x) \\sim \\frac{1}{ix}(\\text{sin}(2)e^{2ix} - 2e^{2ix}) - \
\\frac{1}{x^2}((\\text{cos}(2)+1)e^{2ix} + 2)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4a875cfa-5f86-45db-8d0b-b5eb764e6280"],
 ". To check this approximation we see:"
}], "Text",
 CellChangeTimes->{{3.819477124705309*^9, 3.8194771397099257`*^9}, {
   3.889532152355023*^9, 3.8895321610280375`*^9}, {3.8895322067447543`*^9, 
   3.8895322264237704`*^9}, {3.8895325189593735`*^9, 
   3.8895326188407955`*^9}, {3.889532728414576*^9, 3.8895327588409853`*^9}, 
   3.8895329672162437`*^9, {3.8895331622385435`*^9, 
   3.8895331867171583`*^9}},ExpressionUUID->"d8fb54c8-1da0-4208-b74e-\
3f8dbdd27abd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"approx", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "I"}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"Sin", "[", "2", "]"}]}], ")"}], "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"2", "*", "I", "*", "x"}], ")"}]}]}], ")"}], "/", "x"}], " ", 
   "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"2", "*", "I", "*", "x"}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "2", "]"}], "+", "1"}], ")"}]}], ")"}], "/", 
    RowBox[{"x", "^", "2"}]}], " ", "-", " ", 
   RowBox[{"2", "/", 
    RowBox[{"x", "^", "2", " "}]}]}]}]], "Input",
 CellChangeTimes->{{3.889534099086269*^9, 3.8895341034074526`*^9}, {
  3.889619422884287*^9, 3.889619583828582*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f22725c5-3a13-4374-853f-53bb9bcaca7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["2", 
    SuperscriptBox["x", "2"]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", "2", "]"}]}], ")"}]}], 
   SuperscriptBox["x", "2"]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"Sin", "[", "2", "]"}]}], ")"}]}], "x"]}]], "Output",
 CellChangeTimes->{
  3.889619424533286*^9, {3.889619524555438*^9, 3.889619585948469*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"0e69d81c-0853-4d8a-99cd-603989a853e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exact", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], " ", "+", " ", "t"}], ")"}], " ", "*", 
     " ", 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"I", "*", "x", "*", "t"}], ")"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.889533195509039*^9, 3.8895333678841953`*^9}, {
  3.8895504858001175`*^9, 3.889550485976119*^9}, {3.889619597332957*^9, 
  3.889619638591273*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"be4e59ce-40fc-49bd-a610-cb6bbea6a01c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], ")"}]}]}], 
   SuperscriptBox["x", "2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "2", "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"Sin", "[", "2", "]"}]}]}], ")"}]}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["x", "2"]}]]}]], "Output",
 CellChangeTimes->{3.889619640838778*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"245f7498-8885-4fd6-ae61-4bdce26667e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"exact", "[", "x", "]"}], "]"}], ",", " ", 
     RowBox[{"Re", "[", 
      RowBox[{"approx", "[", "x", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<I(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.889619662423605*^9, 3.8896197189295006`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d3f69863-c15b-490e-be9f-c815925a20a1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAA5VMWaAAA8D+zUp3fgBvqPzAfVbne
F/A/9IZkN/ZZ6T966pMKvS/wPy46skN0mOg/EIERrXlf8D9SizOamhXnPzqu
DPLyvvA/W5lexgAR5D+OCAN85X3xP5aBOApiH9w/Nr3vj8r78j9+VFLCX0Cy
P4CILuGoE/M/uHhYfdTzqD/LU20yhyvzP7zGY55x3po/YOrq1ENb8z9AR6o8
TQCTv4oX5hm9uvM/KsPmSJh4u7/ecdyjr3n0P6HSq8lY/dG/hibJt5T39T+V
BbShA4zjvyAhiwB1EfY/Srvt/Qk75L+6G01JVSv2P7Rwkkn26OS/7hDR2hVf
9j/luia/cUHmv1f72P2WxvY/G5EVs43k6L8o0OhDmZX3P5iBKwxH8O2/wsqq
jHmv9z/XgTvOAIzuv1zFbNVZyfc/imgXTmkm77+QuvBmGv33P9eughWdK/C/
+KT4iZtk+D/EBEygQ1Txv0uS52EQcPg/n7DaBTlz8b+85sZA
          "]], 
         LineBox[CompressedData["
1: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
Rv4P1MquiQ==
          "]]}, Annotation[#, "Charting`Private`Tag$6266#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA5VMWaAAA8D8ImQeossHZPzAfVbne
F/A/kJ+4TXki2T966pMKvS/wP4B1seeOftg/EIERrXlf8D+AHlj1MynXPzqu
DPLyvvA/IB2dMxZM1D+OCAN85X3xP9jH46EKx8s/2NNBzcOV8T8AU2ajnBDK
PyOfgB6irfE/kB+O2phUyD+4Nf7AXt3xP4i4gyKbzMQ/4mL5Bdg88j+w1czF
QwS7Pza974/K+/I/gHY03JRLjb+AiC7hqBPzP8Devsn1c56/y1NtMocr8z8A
kyRMOCynv2Dq6tRDW/M/gNQyJeKXs7+KF+YZvbrzP5g/ywO46MG/3nHco695
9D/EbSzX0jfRv4YmybeU9/U/OuJWHwr24L8gIYsAdRH2PwvD/dXiheG/uhtN
SVUr9j/gIGTtbBXiv+4Q0doVX/Y/lNFzL3cz479X+9j9lsb2P4eBJBuYauW/
KNDoQ5mV9z9Y6ULDCb/pv8LKqox5r/c/aEQ3Xq5G6r9cxWzVWcn3Pz/slOyY
zeq/kLrwZhr99z85ZG6jKNnrv/ik+ImbZPg/nOh2C5Xm7b/JeQjQnTP5P2On
ndUB6/C/ZHTKGH5N+T9lfq6Vvyfxv/5ujGFeZ/k/xLazH/dj8b9p/rKAA275
P5+w2gU5c/G/lX0IFQ==
          "]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$6266#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1.0000000000000022`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"I(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {1., 0}, DisplayFunction :> Identity,
      Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 20}, {-1.090630553119844, 0.8158573501082941}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.889619690083295*^9, 3.889619719282714*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"43d5b514-6ef9-4c76-88ab-71601afaf89d"]
}, Open  ]],

Cell[TextData[{
 "We see agreement between the exact and the approximate solution as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "501116d6-1bb9-4951-b89b-8d611bc198e2"],
 ", so we appear to be good to go."
}], "Text",
 CellChangeTimes->{{3.8896197282087784`*^9, 
  3.889619759735365*^9}},ExpressionUUID->"0dd2db84-9f7a-44dc-865d-\
31d667d9db28"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2", "Section",
 CellChangeTimes->{{3.819477185401244*^9, 
  3.8194771863519216`*^9}},ExpressionUUID->"3f070b75-5760-46e2-8dfd-\
1b5d3e237d45"],

Cell["\<\
Restate the problem here and follow up with any computations or explanations.\
\>", "Text",
 CellChangeTimes->{{3.8194771895995965`*^9, 
  3.8194771998661075`*^9}},ExpressionUUID->"ac4970ba-4670-4dab-9885-\
453ea799808e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 3", "Section",
 CellChangeTimes->{{3.8194772128885565`*^9, 
  3.819477213817498*^9}},ExpressionUUID->"53360077-b126-4736-89d5-\
442e353af9f0"],

Cell[TextData[{
 "Use the method of stationary phase to find the leading behaviors of the \
follow integrals as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1bf96c5b-a143-4e84-b846-5f5e2fd81cda"],
 ".\n(a) ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "1"], "tan", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"], 
            SuperscriptBox[
             StyleBox["t", "TI"], "4"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{1}\\tan(t)e^{ixt^4}dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4c7d53e1-9f92-40c2-a89f-c432dd214214"],
 "\nLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          StyleBox["u", "TI"], "\[LongEqual]", 
          SuperscriptBox[
           StyleBox["t", "TI"], "2"], "\[DoubleLongRightArrow]", 
          StyleBox["d", "TI"], 
          StyleBox["u", "TI"], "\[LongEqual]", "2", 
          StyleBox["t", "TI"], 
          StyleBox["d", "TI"], 
          StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
      "u=t^2 \\implies du = 2tdt", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "."}], TraditionalForm]],ExpressionUUID->
  "18ed594c-cf9b-4425-a563-b3a0500874e9"],
 " This yields the integral:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "1"], 
         FractionBox[
          RowBox[{"tan", "(", 
            SqrtBox[
             StyleBox["u", "TI"]], ")"}], 
          RowBox[{"2", 
            SqrtBox[
             StyleBox["u", "TI"]]}]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"], 
            SuperscriptBox[
             StyleBox["u", "TI"], "2"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["u", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{1}\\frac{\\tan(\\sqrt{u})}{2\\sqrt{u}}e^{ixu^2}du", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6b804a3a-ad98-4336-9576-51866d3705f7"],
 "\n Here, we see that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["f", "TI"], 
         RowBox[{"(", 
           StyleBox["u", "TI"], ")"}], "\[LongEqual]", 
         FractionBox[
          RowBox[{"tan", "(", 
            SqrtBox[
             StyleBox["u", "TI"]], ")"}], 
          RowBox[{"2", 
            SqrtBox[
             StyleBox["u", "TI"]]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "f(u) =\\frac{\\tan(\\sqrt{u})}{2\\sqrt{u}}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "adf7747d-ec06-46e9-9f6e-c12007dfc4a1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{"\[Phi]", 
          RowBox[{"(", 
            StyleBox["u", "TI"], ")"}], "\[LongEqual]", 
          SuperscriptBox[
           StyleBox["u", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
      "input" -> "\\phi(u) = u^2", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "."}], TraditionalForm]],ExpressionUUID->
  "440c0b72-5708-4e29-86e5-61718e94b41b"],
 " This means that the stationary point is given when ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]"], 
         RowBox[{"(", 
           StyleBox["u", "TI"], ")"}], "\[LongEqual]", "2", 
         StyleBox["u", "TI"], "\[LongEqual]", "0", "\[DoubleLongRightArrow]", 
         StyleBox["u", "TI"], "\[LongEqual]", "0."}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\phi'(u) = 2u = 0 \\implies u = 0.", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a6ad44b9-4f6d-47db-9140-590be4f8fcd7"],
 " Hence, by the relation from lecture on a boundary point of: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"I", "(", "x", ")"}], " ", "\[Tilde]", " ", 
     RowBox[{
      RowBox[{"1", "/", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], 
         RowBox[{"x", "|", 
          RowBox[{
           RowBox[{"\[Phi]", "''"}], 
           RowBox[{"(", "a", ")"}]}], "|"}]], ")"}], 
       RowBox[{"1", "/", "2"}]], 
      RowBox[{"f", "(", "a", ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "x", " ", 
         RowBox[{"\[Phi]", "(", "a", ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{
          RowBox[{"sgn", "(", 
           RowBox[{
            RowBox[{"\[Phi]", "''"}], 
            RowBox[{"(", "a", ")"}]}], ")"}], "/", "4"}]}]}]]}]}], ",", "   ", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"+", "\[Infinity]"}]}]}], TraditionalForm]],ExpressionUUID->
  "0fce9e27-6f04-407a-a5f0-9e3b98617035"],
 " we have that:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[Tilde]", 
         FractionBox["1", "4"], 
         SuperscriptBox[
          RowBox[{"(", 
            FractionBox["\[Pi]", 
             StyleBox["x", "TI"]], ")"}], 
          FractionBox["1", "2"]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          FractionBox[
           RowBox[{
             StyleBox["i", "TI"], "\[Pi]"}], "4"]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "I(x) \\sim \
\\frac{1}{4}(\\frac{\\pi}{x})^{\\frac{1}{2}}e^{\\frac{i\\pi}{4}}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fb099aac-f4a0-445b-958a-4400c85539f0"]
}], "Text",
 CellChangeTimes->{{3.819477217465713*^9, 3.8194772281844006`*^9}, {
   3.889619833245161*^9, 3.889619883163751*^9}, {3.8897066649758873`*^9, 
   3.8897067005229645`*^9}, {3.88970685236736*^9, 3.8897068669167566`*^9}, {
   3.88970695580344*^9, 3.8897069674896317`*^9}, {3.889707044023578*^9, 
   3.8897071605906115`*^9}, {3.8897072570504856`*^9, 3.889707267751511*^9}, {
   3.889707337368963*^9, 3.8897073406025686`*^9}, {3.8897073728651123`*^9, 
   3.8897073858315954`*^9}, 3.889707448386675*^9, {3.8897086417223406`*^9, 
   3.8897086887069073`*^9}, {3.889708752860367*^9, 
   3.889708843778057*^9}},ExpressionUUID->"fd8fe25a-0bda-453f-93cc-\
c04259d41a4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", "t", "]"}], "*", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", "*", "x", "*", 
            RowBox[{"t", "^", "4"}]}], ")"}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "4"}], ")"}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "/", "x"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}], "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", 
          RowBox[{"Pi", "/", "4"}]}], ")"}]}]}], " ", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<I(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.889707450463293*^9, 3.889707634233859*^9}, 
   3.889707756148244*^9, {3.889708187066655*^9, 3.8897082376107144`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0d5d2eae-79b0-447e-98b2-9b8c703fdd72"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$601812#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
89mO72UklJSdEs/PE1hEKtBmSkn4FztMgUs=
          "]]}, Annotation[#, "Charting`Private`Tag$601812#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.03683309528577656}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"I(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0.036833095285776475`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50}, {0.036833095285776475`, 0.18874110054530654`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.889707520636801*^9, 3.8897079613809032`*^9, 
  3.8897082020724983`*^9, 3.8897082478203945`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"cfa17094-c21a-40df-b10c-14d3acd69ef3"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.889707611034813*^9, 
  3.889707638497849*^9}},ExpressionUUID->"77203a46-e0d6-4154-bb56-\
bc08fc24b29c"],

Cell[TextData[{
 "(b) ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", 
          FractionBox["1", "2"], "2"], 
         RowBox[{"(", 
           RowBox[{"1", "+", 
             StyleBox["t", "TI"]}], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"], 
            RowBox[{"(", 
              RowBox[{
                SuperscriptBox[
                 StyleBox["t", "TI"], "3"], "/", "3", "-", 
                StyleBox["t", "TI"]}], ")"}]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{\\frac{1}{2}}^{2}(1+t)e^{ix(t^3/3-t)}dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c5aeb987-0d7b-449d-a789-ba217193a429"],
 ".\nAs before, we take ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          StyleBox["f", "TI"], 
          RowBox[{"(", 
            StyleBox["t", "TI"], ")"}], "\[LongEqual]", "1", "+", 
          StyleBox["t", "TI"], ",", "\[Phi]", 
          RowBox[{"(", 
            StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
          FractionBox[
           SuperscriptBox[
            StyleBox["t", "TI"], "3"], "3"], "-", 
          StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
      "f(t) =1 + t,\\phi(t) = \\frac{t^3}{3}-t", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "."}], TraditionalForm]],ExpressionUUID->
  "ea8960f4-6306-47a3-a760-111f3153fbbd"],
 " This means we have ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["t", "TI"], "2"], "-", "1", "\[LongEqual]", "0", 
         "\[DoubleLongRightArrow]", 
         StyleBox["t", "TI"], "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\phi'(t) = t^2-1 = 0 \\implies t =1", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4eada6ec-1a73-4598-b1a0-672d63ffd0f2"],
 ", since we are only concerned with the values within our bounds of \
integration. Since this is not an end point, we use:\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"I", 
     RowBox[{"(", "x", ")"}]}], " ", "\[Tilde]", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], 
        RowBox[{"x", "|", 
         RowBox[{
          RowBox[{"\[Phi]", "''"}], 
          RowBox[{"(", "a", ")"}]}], "|"}]], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"f", "(", "a", ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"\[Phi]", "(", "a", ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{
         RowBox[{"sgn", "(", 
          RowBox[{
           RowBox[{"\[Phi]", "''"}], 
           RowBox[{"(", "a", ")"}]}], ")"}], "/", "4"}]}]}]]}]}], ",", "   ", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"+", "\[Infinity]"}]}]}]],ExpressionUUID->
  "a19f0424-20d7-4f00-adad-cfb0d837a3df"],
 " . This yields:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[Tilde]", "2", 
         SuperscriptBox[
          RowBox[{"(", 
            FractionBox["\[Pi]", 
             StyleBox["x", "TI"]], ")"}], 
          FractionBox["1", "2"]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            FractionBox[
             RowBox[{"-2", 
               StyleBox["i", "TI"], 
               StyleBox["x", "TI"]}], "3"], "+", 
            StyleBox["i", "TI"], 
            FractionBox["\[Pi]", "4"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "I(x) \\sim 2(\\frac{\\pi}{x})^{\\frac{1}{2}}e^{\\frac{-2ix}{3}+i\\frac{\
\\pi}{4}}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6653a8ba-0cd0-4a4f-8c93-f114dec87928"]
}], "Text",
 CellChangeTimes->{{3.8897080570026083`*^9, 3.8897080610003724`*^9}, {
  3.889708123989667*^9, 3.8897081481250105`*^9}, {3.889708197477483*^9, 
  3.889708208969428*^9}, {3.889708245159848*^9, 
  3.889708356284403*^9}},ExpressionUUID->"c94c42fe-73a3-482f-87cf-\
9d97af79967e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "t"}], ")"}], "*", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", "*", "x", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"t", "^", "3"}], "/", "3"}], " ", "-", "t"}], ")"}]}], 
           ")"}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"1", "/", "2"}], ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"2", " ", "*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "/", "x"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}], "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "*", "I", "*", "x"}], ")"}], "/", "3"}], " ",
           "+", " ", 
          RowBox[{"(", 
           RowBox[{"I", "*", 
            RowBox[{"Pi", "/", "4"}]}], ")"}]}], ")"}]}]}], " ", "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<I(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.889708485585517*^9, 3.889708562339042*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6680ef7e-792b-4201-94ac-0fed74aa4e71"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
1WPPomVrkUN692etPHNIW/ym9jsmGFvuDyAdfGQOXVqWlporF7ER76bq0Cfm
EOpkt0e1Kx3LJBFyXz81h3urz38/pzzAY+HXwvZWMPn63HHgmXyGzx+jKJz8
YA7Ge62N/0W/wk+0y85nD5uD9embW3ce+oz9RGZWqkfN4dixrFsK0l8wYVU7
5Nu4OcTXVyao077gN+9KT3NMm8O2IeV7PqdbcJdDqeOpZXM4xPLOgeVlK+aM
LtHdyUWBQu2hTLdH7bjl2NSz/TwUyFy/9AmxdOAMCy0VHz4K2HlEe8U6d2AZ
gZLt97ZQgPsMKVSE7zsm5j3nZZOkgDblNOfuUz+w96dnQ82qFPDyHXybxdaN
NZ9PHBtWp0C1woYhc7tuPJ+u0cuiRYGuzw4GSg+7cazLs3Y9PQrw8wf5phj3
4Myp4jd3jCggR4hyz/D5iRtFirNOWFMgOXqtrzWL+d5aHReJ2UeBDVFX9/79
1Yvt+9WuZ9pSQLNlvQ+29eGBgqcXP9tT4NPRNZWN2X142ehpsI4rBaK+qVcc
Tu/HKh5F+/6eoUCqdzHfgccDuPG+YemsPwVW7ESSuOoGsFd305aRsxR4aMx7
7sD3AZxvO97RFkIB3om9qVfZqFgGqR8piKZAEcu9L08OUzGOePXqfgwF5n3l
tJpPU7FblfW2G3EUkE9xnI6OoeK7Gmeo0RcooPxK4FXMIyoWlX5+8uBVCvh8
fXN8eZyKKw+bfrK8RgGb/zSv+65Rsf2NFlXT6xTQzV5t9Oal4evcUxPKNynw
eKfN6JIqDWtbxOzfdpsCebM3ZZMNaLglbnOZ0B0mv8fvN+XtpmHeFa3g9XsU
ED0ZknXSg4afEt58n8umQOIB6xeC/jRsFWC7a/QBBeL1qqzIkTR8cThgtT2f
AtHe9gt66TSsKMfq8ukxBdTa8lPm7tHwe7frr+sKKHBuub5o1xMaZvtRFltY
TAHpYXKJdS0NP9xiRst+TgFiZLnu1nc0DDZt5IxSph57eSPPfqbhvksejy6/
oIDnyrmje9ppOPr97MaYCgp86/Koze+hYWmWBO/gKgow7kb5JFBpuNZIqMmn
hgJL1BqbwWEadjqXp3a0lgKO5fv3Nk3Q8PILvav2ryjgPfR6j+4cDd+efDe5
p44CP/0+6G1dpuGdqva26A0FFm+dWUpeo+GOE4wyQj0F7smyJ0Wy0HHQw2Ah
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
          "]]}, Annotation[#, "Charting`Private`Tag$672473#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
V+qoOQjK7+rWTn+D3M481Bc5aQ6uPdz/HudWIA1pUwK3nzncS/QfeO9Sjb6e
OYemIsxB/2DX4x82dUjgvzm76nRzmI88nmXf0oo+1v+0r8xgx9908Li44jcU
Fvhhd0WWOXAO3Tt9KOIbotYn7Sl5bA47ZPnUDim1oeJAnf15BeagtnP3eWZo
O9rb4O+W8N4cHjK+eUqvdCKuICf321Xm0Lz6/EKl1XdU8Z/ZodhqcxA/Ktj7
Nvk7kg3aeOTKR3PIbUinvFfvQjP/FRwP+2IOX3f+Hnjp+APdCRo5daTXHIRs
ShdzLvUgKcvwM/v62fmkL87VfuhBORJ8YZZUcyC2vL6qxPkTvapUv6rONAdv
w5zJN5d+otYNAZlLY+YgUdDwuTG0Fzn3cDwd+8Xml3Jdl17ci6gFiQX9k+ZQ
GCDSpDveiyb3vH77cdYcVA+zqkIP9aFN6QvtCb/NQUnG3+WYUT9K8Y/pufzH
HLLaJipE/PvRfyQJWug/c+hdtSXPZfcjdZbRhNs6MuyVli802DCAbLUjuVX4
yLAS7BacWT+A2tZu2iy9kQw73lv5pc4PINfODNHNm8nAGy911lWQik6FV8vO
C5Fh+ciQsCqRiq5/XEeskSKDuvCyUEw8FQncSyaXSJOBc+P3qbWPqOiet4JN
7lYy/HHeHc1fRkVPN1kduC1Lhv/2+TDretj3RVqXe7Q8GRwuMH6EjlNR2Wuv
E0GKZJg3yqt69YeKPjnHnnFRJcN9XI6/bKWhXWpbwnapk4FZeF/4mSYNdfx5
fgFpkuG46EKjoBkNMXOabyroksH4Rf70hYM0tPaXwNNpIzIclaMO1iXQUCzO
LmCakCHe79HUr3QaEkzSfd1FJMOmt3Pf0/NoSMbQsbqSxN5vLqiVWEVDeTyD
dUVkMuxOA4XvDTSk3RvS/IhChtgPDf+y22gIXbzXc2Mnm6/8yO1mJg3V7VOm
RdiSoVTx1oD6LxqyV3w7dNqODGXhmXuE5mno+9LOiWO72Xq80n8XuUpDhz73
zO3fQwY7ZsqC/zo6Yj30+W29jwyme2xpgzx05BewusZ0Pxl8/gm60TfT0Zz5
bW6tA2TQN2TZnBClowjRrZtlXchw6tffZB8pOmou5nFFB8ngWColv38bHW21
n3/s5k6G5w91dhTK0ZH/KHXy3GEyeKGb5aFKdISvfTG+d5QMGaKj6YWqdCQg
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
Fu7n+09MTxO8db6xXdW6Fv4FhmCiOw==
          "]]}, Annotation[#, "Charting`Private`Tag$672473#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"I(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50}, {-1.646672581183609, 2.455773230185808}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.889708574920415*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d594d206-ca46-4286-b7d6-7a0425f636aa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{760.5, 833.25},
WindowMargins->{{372.75, Automatic}, {55.5, Automatic}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d75e67b7-b5ca-4e2d-9fea-0daa88af3a50"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 216, 4, 98, "Title",ExpressionUUID->"197654a4-4d8f-4ad2-acd2-0426bba106a8"],
Cell[799, 28, 207, 4, 31, "Author",ExpressionUUID->"47fdc244-5ee2-4b42-93c3-40f677fdf9ef"],
Cell[1009, 34, 214, 4, 31, "Affiliation",ExpressionUUID->"581392a7-3011-4211-898e-5aefcdf8effb"],
Cell[CellGroupData[{
Cell[1248, 42, 158, 3, 67, "Section",ExpressionUUID->"3b0f5f64-fd7d-4b7d-9281-4b7c9c73d5a2"],
Cell[1409, 47, 7224, 191, 208, "Text",ExpressionUUID->"d8fb54c8-1da0-4208-b74e-3f8dbdd27abd"],
Cell[CellGroupData[{
Cell[8658, 242, 976, 29, 28, "Input",ExpressionUUID->"f22725c5-3a13-4374-853f-53bb9bcaca7d"],
Cell[9637, 273, 778, 22, 51, "Output",ExpressionUUID->"0e69d81c-0853-4d8a-99cd-603989a853e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10452, 300, 694, 18, 28, "Input",ExpressionUUID->"be4e59ce-40fc-49bd-a610-cb6bbea6a01c"],
Cell[11149, 320, 902, 27, 51, "Output",ExpressionUUID->"245f7498-8885-4fd6-ae61-4bdce26667e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12088, 352, 1382, 36, 86, "Input",ExpressionUUID->"d3f69863-c15b-490e-be9f-c815925a20a1"],
Cell[13473, 390, 60223, 1049, 242, "Output",ExpressionUUID->"43d5b514-6ef9-4c76-88ab-71601afaf89d"]
}, Open  ]],
Cell[73711, 1442, 598, 14, 60, "Text",ExpressionUUID->"0dd2db84-9f7a-44dc-865d-31d667d9db28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74346, 1461, 156, 3, 67, "Section",ExpressionUUID->"3f070b75-5760-46e2-8dfd-1b5d3e237d45"],
Cell[74505, 1466, 231, 5, 35, "Text",ExpressionUUID->"ac4970ba-4670-4dab-9885-453ea799808e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74773, 1476, 156, 3, 67, "Section",ExpressionUUID->"53360077-b126-4736-89d5-442e353af9f0"],
Cell[74932, 1481, 7022, 186, 313, "Text",ExpressionUUID->"fd8fe25a-0bda-453f-93cc-c04259d41a4f"],
Cell[CellGroupData[{
Cell[81979, 1671, 2085, 57, 105, "Input",ExpressionUUID->"0d5d2eae-79b0-447e-98b2-9b8c703fdd72"],
Cell[84067, 1730, 41062, 731, 251, "Output",ExpressionUUID->"cfa17094-c21a-40df-b10c-14d3acd69ef3"]
}, Open  ]],
Cell[125144, 2464, 152, 3, 28, "Input",ExpressionUUID->"77203a46-e0d6-4154-bb56-bc08fc24b29c"],
Cell[125299, 2469, 4590, 124, 197, "Text",ExpressionUUID->"c94c42fe-73a3-482f-87cf-9d97af79967e"],
Cell[CellGroupData[{
Cell[129914, 2597, 2367, 68, 105, "Input",ExpressionUUID->"6680ef7e-792b-4201-94ac-0fed74aa4e71"],
Cell[132284, 2667, 57588, 1003, 249, "Output",ExpressionUUID->"d594d206-ca46-4286-b7d6-7a0425f636aa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

