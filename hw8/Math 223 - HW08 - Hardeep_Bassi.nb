(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    259516,       5166]
NotebookOptionsPosition[    255575,       5092]
NotebookOutlinePosition[    255988,       5108]
CellTagsIndexPosition[    255945,       5105]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Math 223: Homework 8", "Title",
 CellChangeTimes->{{3.819477029542458*^9, 3.8194770325147047`*^9}, {
  3.8895321257584968`*^9, 
  3.889532125835516*^9}},ExpressionUUID->"197654a4-4d8f-4ad2-acd2-\
0426bba106a8"],

Cell["Hardeep Bassi", "Author",
 CellChangeTimes->{{3.819477041266364*^9, 3.81947704456911*^9}, {
  3.889532127899108*^9, 
  3.8895321337562532`*^9}},ExpressionUUID->"47fdc244-5ee2-4b42-93c3-\
40f677fdf9ef"],

Cell["04/07/2023", "Affiliation",
 CellChangeTimes->{{3.8194774638175488`*^9, 3.819477466618027*^9}, {
  3.8895321399241257`*^9, 
  3.8895321419200673`*^9}},ExpressionUUID->"581392a7-3011-4211-898e-\
5aefcdf8effb"],

Cell[CellGroupData[{

Cell["Problem 1", "Section",
 CellChangeTimes->{{3.8194770755713477`*^9, 
  3.8194770765366144`*^9}},ExpressionUUID->"3b0f5f64-fd7d-4b7d-9281-\
4b7c9c73d5a2"],

Cell[TextData[{
 "Find the asymptotic behavior of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "2"], 
         RowBox[{"(", 
           RowBox[{"sin", 
             StyleBox["t", "TI"], "+", 
             StyleBox["t", "TI"]}], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{"i", 
            StyleBox["x", "TI"], 
            StyleBox["t", "TI"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{2}(\\text{sin}t + t)e^{\\text{i}xt}dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "da7f98e6-bde0-4b58-bc38-b1f9cc812d18"],
 ", as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "39e65fc1-42fd-48bd-90c7-e67f34188c16"],
 " up to terms involving ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           StyleBox["x", "TI"], "2"]], "."}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\frac{1}{x^2}.", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "01ed5867-2dab-416d-a02a-484977a717ec"],
 "\nFrom lecture, we know that integration by parts works well on ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[LongEqual]", 
         SubsuperscriptBox["\[Integral]", 
          StyleBox["a", "TI"], 
          StyleBox["b", "TI"]], 
         StyleBox["f", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"], "\[Phi]", 
            RowBox[{"(", 
              StyleBox["t", "TI"], ")"}]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "I(x) = \\int_{a}^{b}f(t)e^{ix\\phi(t)}dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "907b4a48-eae9-47c6-bf12-cabe6777f1df"],
 "\nwhen ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Phi]", "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\phi(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9438c83a-bb97-4ffb-92f4-9ad02ad15b7b"],
 "is monotonic on the given interval. Since ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Phi]", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\phi(t) = t", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c0b43a10-11f5-4f8f-a255-a9f197ff82b9"],
 ", we satisfy this criterion, hence we obtain:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[Tilde]", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["n", "TI"], "\[LongEqual]", "0"}], "\[Infinity]", 
          LimitsPositioning -> True], 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", "-1", ")"}], 
           StyleBox["n", "TI"]], 
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{
               StyleBox["i", "TI"], 
               StyleBox["x", "TI"]}], ")"}], 
           RowBox[{
             StyleBox["n", "TI"], "+", "1"}]]], 
         RowBox[{"[", 
           RowBox[{
             SuperscriptBox[
              StyleBox["f", "TI"], 
              StyleBox["n", "TI"]], 
             RowBox[{"(", 
               StyleBox["b", "TI"], ")"}], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"], 
                StyleBox["b", "TI"]}]], "-", 
             SuperscriptBox[
              StyleBox["f", "TI"], 
              StyleBox["n", "TI"]], 
             RowBox[{"(", 
               StyleBox["a", "TI"], ")"}], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"], 
                StyleBox["a", "TI"]}]]}], "]"}], ",", 
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "I(x) \\sim \\sum_{n=0}^{\\infty}\\frac{(-1)^n}{(ix)^{n+1}}[f^n(b) \
e^{ixb} - f^n(a)e^{ixa}], x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1ecffc45-78b6-4435-92f5-91ba3bfafd59"],
 ". Using this formula for the first two terms yields:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[Tilde]", 
         FractionBox["1", 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"]}]], 
         RowBox[{"(", 
           RowBox[{"sin", 
             RowBox[{"(", "2", ")"}], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{"2", 
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"]}]], "-", "2", 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{"2", 
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"]}]]}], ")"}], "-", 
         FractionBox["1", 
          SuperscriptBox[
           StyleBox["x", "TI"], "2"]], 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"(", 
               RowBox[{"cos", 
                 RowBox[{"(", "2", ")"}], "+", "1"}], ")"}], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{"2", 
                StyleBox["i", "TI"], 
                StyleBox["x", "TI"]}]], "+", "2"}], ")"}]}], TraditionalForm],
      "errors" -> {}, "input" -> 
     "I(x) \\sim \\frac{1}{ix}(\\text{sin}(2)e^{2ix} - 2e^{2ix}) - \
\\frac{1}{x^2}((\\text{cos}(2)+1)e^{2ix} + 2)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4a875cfa-5f86-45db-8d0b-b5eb764e6280"],
 ". To check this approximation we see:"
}], "Text",
 CellChangeTimes->{{3.819477124705309*^9, 3.8194771397099257`*^9}, {
   3.889532152355023*^9, 3.8895321610280375`*^9}, {3.8895322067447543`*^9, 
   3.8895322264237704`*^9}, {3.8895325189593735`*^9, 
   3.8895326188407955`*^9}, {3.889532728414576*^9, 3.8895327588409853`*^9}, 
   3.8895329672162437`*^9, {3.8895331622385435`*^9, 
   3.8895331867171583`*^9}},ExpressionUUID->"d8fb54c8-1da0-4208-b74e-\
3f8dbdd27abd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"approx", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "I"}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"Sin", "[", "2", "]"}]}], ")"}], "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"2", "*", "I", "*", "x"}], ")"}]}]}], ")"}], "/", "x"}], " ", 
   "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"2", "*", "I", "*", "x"}], ")"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "2", "]"}], "+", "1"}], ")"}]}], ")"}], "/", 
    RowBox[{"x", "^", "2"}]}], " ", "-", " ", 
   RowBox[{"2", "/", 
    RowBox[{"x", "^", "2", " "}]}]}]}]], "Input",
 CellChangeTimes->{{3.889534099086269*^9, 3.8895341034074526`*^9}, {
  3.889619422884287*^9, 3.889619583828582*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f22725c5-3a13-4374-853f-53bb9bcaca7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["2", 
    SuperscriptBox["x", "2"]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", "2", "]"}]}], ")"}]}], 
   SuperscriptBox["x", "2"]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"Sin", "[", "2", "]"}]}], ")"}]}], "x"]}]], "Output",
 CellChangeTimes->{
  3.889619424533286*^9, {3.889619524555438*^9, 3.889619585948469*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"0e69d81c-0853-4d8a-99cd-603989a853e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exact", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], " ", "+", " ", "t"}], ")"}], " ", "*", 
     " ", 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"I", "*", "x", "*", "t"}], ")"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.889533195509039*^9, 3.8895333678841953`*^9}, {
  3.8895504858001175`*^9, 3.889550485976119*^9}, {3.889619597332957*^9, 
  3.889619638591273*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"be4e59ce-40fc-49bd-a610-cb6bbea6a01c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}], ")"}]}]}], 
   SuperscriptBox["x", "2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "2", "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"Sin", "[", "2", "]"}]}]}], ")"}]}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["x", "2"]}]]}]], "Output",
 CellChangeTimes->{3.889619640838778*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"245f7498-8885-4fd6-ae61-4bdce26667e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"exact", "[", "x", "]"}], "]"}], ",", " ", 
     RowBox[{"Re", "[", 
      RowBox[{"approx", "[", "x", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<I(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.889619662423605*^9, 3.8896197189295006`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d3f69863-c15b-490e-be9f-c815925a20a1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAA5VMWaAAA8D+zUp3fgBvqPzAfVbne
F/A/9IZkN/ZZ6T966pMKvS/wPy46skN0mOg/EIERrXlf8D9SizOamhXnPzqu
DPLyvvA/W5lexgAR5D+OCAN85X3xP5aBOApiH9w/Nr3vj8r78j9+VFLCX0Cy
P4CILuGoE/M/uHhYfdTzqD/LU20yhyvzP7zGY55x3po/YOrq1ENb8z9AR6o8
TQCTv4oX5hm9uvM/KsPmSJh4u7/ecdyjr3n0P6HSq8lY/dG/hibJt5T39T+V
BbShA4zjvyAhiwB1EfY/Srvt/Qk75L+6G01JVSv2P7Rwkkn26OS/7hDR2hVf
9j/luia/cUHmv1f72P2WxvY/G5EVs43k6L8o0OhDmZX3P5iBKwxH8O2/wsqq
jHmv9z/XgTvOAIzuv1zFbNVZyfc/imgXTmkm77+QuvBmGv33P9eughWdK/C/
+KT4iZtk+D/EBEygQ1Txv0uS52EQcPg/n7DaBTlz8b+85sZA
          "]], 
         LineBox[CompressedData["
1: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
Rv4P1MquiQ==
          "]]}, Annotation[#, "Charting`Private`Tag$6266#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA5VMWaAAA8D8ImQeossHZPzAfVbne
F/A/kJ+4TXki2T966pMKvS/wP4B1seeOftg/EIERrXlf8D+AHlj1MynXPzqu
DPLyvvA/IB2dMxZM1D+OCAN85X3xP9jH46EKx8s/2NNBzcOV8T8AU2ajnBDK
PyOfgB6irfE/kB+O2phUyD+4Nf7AXt3xP4i4gyKbzMQ/4mL5Bdg88j+w1czF
QwS7Pza974/K+/I/gHY03JRLjb+AiC7hqBPzP8Devsn1c56/y1NtMocr8z8A
kyRMOCynv2Dq6tRDW/M/gNQyJeKXs7+KF+YZvbrzP5g/ywO46MG/3nHco695
9D/EbSzX0jfRv4YmybeU9/U/OuJWHwr24L8gIYsAdRH2PwvD/dXiheG/uhtN
SVUr9j/gIGTtbBXiv+4Q0doVX/Y/lNFzL3cz479X+9j9lsb2P4eBJBuYauW/
KNDoQ5mV9z9Y6ULDCb/pv8LKqox5r/c/aEQ3Xq5G6r9cxWzVWcn3Pz/slOyY
zeq/kLrwZhr99z85ZG6jKNnrv/ik+ImbZPg/nOh2C5Xm7b/JeQjQnTP5P2On
ndUB6/C/ZHTKGH5N+T9lfq6Vvyfxv/5ujGFeZ/k/xLazH/dj8b9p/rKAA275
P5+w2gU5c/G/lX0IFQ==
          "]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$6266#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1.0000000000000022`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"I(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {1., 0}, DisplayFunction :> Identity,
      Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 20}, {-1.090630553119844, 0.8158573501082941}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.889619690083295*^9, 3.889619719282714*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"43d5b514-6ef9-4c76-88ab-71601afaf89d"]
}, Open  ]],

Cell[TextData[{
 "We see agreement between the exact and the approximate solution as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "501116d6-1bb9-4951-b89b-8d611bc198e2"],
 ", so we appear to be good to go."
}], "Text",
 CellChangeTimes->{{3.8896197282087784`*^9, 
  3.889619759735365*^9}},ExpressionUUID->"0dd2db84-9f7a-44dc-865d-\
31d667d9db28"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2", "Section",
 CellChangeTimes->{{3.819477185401244*^9, 
  3.8194771863519216`*^9}},ExpressionUUID->"3f070b75-5760-46e2-8dfd-\
1b5d3e237d45"],

Cell[TextData[{
 "Find the leading behavior of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "1"], 
         SqrtBox[
          RowBox[{
            StyleBox["t", "TI"], "(", 
            RowBox[{"1", "-", 
              StyleBox["t", "TI"]}], ")"}]], 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              StyleBox["t", "TI"], "+", 
              StyleBox["a", "TI"]}], ")"}], 
          RowBox[{"-", 
            StyleBox["x", "TI"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"], ",", 
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]", ",", 
         StyleBox["a", "TI"], ">", "0"}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "\\int_{0}^{1}\\sqrt{t(1-t)}(t+a)^{-x}dt, x \\to \\infty, a > 0", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0cf97375-2a2e-40f6-ace7-8260d851dfbc"],
 ".\nWe seek to put this integral in the form",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", 
          StyleBox["T", "TI"]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{"-", 
            StyleBox["x", "TI"], 
            StyleBox["t", "TI"]}]], "\[Phi]", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int _{0}^{T}e^{-xt}\\phi(t)dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5146ea35-0acf-43c7-a6de-8b0b14f6ce88"],
 " to invoke Watson\[CloseCurlyQuote]s lemma. To start, we reformulate as:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "1"], 
         SqrtBox[
          RowBox[{
            StyleBox["t", "TI"], "(", 
            RowBox[{"1", "-", 
              StyleBox["t", "TI"]}], ")"}]], 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              StyleBox["t", "TI"], "+", 
              StyleBox["a", "TI"]}], ")"}], 
          RowBox[{"-", 
            StyleBox["x", "TI"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"], "\[LongEqual]", 
         SubsuperscriptBox["\[Integral]", "0", "1"], 
         SqrtBox[
          RowBox[{
            StyleBox["t", "TI"], "(", 
            RowBox[{"1", "-", 
              StyleBox["t", "TI"]}], ")"}]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{"-", 
            StyleBox["x", "TI"], "log", 
            RowBox[{"(", 
              RowBox[{
                StyleBox["t", "TI"], "+", 
                StyleBox["a", "TI"]}], ")"}]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{1}\\sqrt{t(1-t)}(t+a)^{-x}dt = \
\\int_{0}^{1}\\sqrt{t(1-t)}e^{-x\\log(t+a)}dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e33aceac-601f-42cc-b531-2afad994c3ea"],
 ". Letting ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["u", "TI"], "\[LongEqual]", "log", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["t", "TI"], "+", 
             StyleBox["a", "TI"]}], ")"}]}], TraditionalForm], "errors" -> {},
      "input" -> "u = \\log(t+a)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0a4b3fbf-06fe-4846-b295-572057037f5d"],
 ", we get:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"log", "(", 
            StyleBox["a", "TI"], ")"}], 
          RowBox[{"log", "(", 
            RowBox[{"1", "+", 
              StyleBox["a", "TI"]}], ")"}]], 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  SuperscriptBox[
                   StyleBox["e", "TI"], 
                   StyleBox["u", "TI"]], "-", 
                  StyleBox["a", "TI"]}], ")"}], "(", 
              RowBox[{"1", "+", 
                StyleBox["a", "TI"], "-", 
                SuperscriptBox[
                 StyleBox["e", "TI"], 
                 StyleBox["u", "TI"]]}], ")"}], ")"}], 
          FractionBox["1", "2"]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{"-", 
            StyleBox["x", "TI"], 
            StyleBox["t", "TI"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["u", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{\\log(a)}^{\\log(1+a)}((e^u-a)(1+a-e^u))^{\\frac{1}{2}}e^{-xt}\
du", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b3c49830-4f95-4f8e-99e1-2a44e52a3f49"],
 ". To obtain 0 as our lower bound, we substitute ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["w", "TI"], "\[LongEqual]", 
         StyleBox["u", "TI"], "-", "log", 
         RowBox[{"(", 
           StyleBox["a", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "w = u - \\log(a)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3bf29eb5-8568-4d57-adde-27a61f3c8ffb"],
 " to obtain:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", 
          RowBox[{"log", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                StyleBox["a", "TI"]}], ")"}], "-", "log", 
            RowBox[{"(", 
              StyleBox["a", "TI"], ")"}]}]], 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  StyleBox["a", "TI"], "(", 
                  RowBox[{
                    SuperscriptBox[
                    StyleBox["e", "TI"], 
                    StyleBox["w", "TI"]], "-", "1"}], ")"}], ")"}], "(", 
              RowBox[{"1", "+", 
                StyleBox["a", "TI"], "-", 
                StyleBox["a", "TI"], 
                SuperscriptBox[
                 StyleBox["e", "TI"], 
                 StyleBox["w", "TI"]]}], ")"}], ")"}], 
          FractionBox["1", "2"]], 
         SuperscriptBox[
          StyleBox["a", "TI"], 
          RowBox[{"-", 
            StyleBox["x", "TI"]}]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{"-", 
            StyleBox["x", "TI"], 
            StyleBox["w", "TI"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["w", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{\\log(1+a) - \
\\log(a)}((a(e^w-1))(1+a-ae^w))^{\\frac{1}{2}}a^{-x}e^{-xw}dw", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a31d1ed4-78b8-45ab-9b9c-2306608394e3"],
 ". By Watson\[CloseCurlyQuote]s, we get:"
}], "Text",
 CellChangeTimes->{{3.8194771895995965`*^9, 3.8194771998661075`*^9}, {
  3.8897955643414884`*^9, 3.8897955777182913`*^9}, {3.889796060467057*^9, 
  3.889796142745737*^9}, {3.8897961734019594`*^9, 3.8897962080319633`*^9}, {
  3.889796283127276*^9, 3.8897963562509212`*^9}, {3.889796473101019*^9, 
  3.889796486563594*^9}},ExpressionUUID->"ac4970ba-4670-4dab-9885-\
453ea799808e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"a", "*", 
    RowBox[{"E", "^", "w"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "*", 
          RowBox[{"E", "^", "w"}]}], "-", "a"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a", "-", 
         RowBox[{"a", "*", 
          RowBox[{"E", "^", "w"}]}]}], ")"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"a", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.889796491558453*^9, 3.8897965104014916`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"fb9c3ad2-c02e-465a-b8a8-b9c8d7a7844e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["a", 
     RowBox[{"3", "/", "2"}]], " ", 
    SqrtBox["w"]}], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         SqrtBox["a"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", 
          RowBox[{"3", "/", "2"}]]}]}], ")"}]}], ")"}], " ", 
    SuperscriptBox["w", 
     RowBox[{"3", "/", "2"}]]}], "-", 
   RowBox[{
    FractionBox["1", "96"], " ", 
    RowBox[{"(", 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "77"}], " ", 
         SqrtBox["a"]}], "+", 
        RowBox[{"84", " ", 
         SuperscriptBox["a", 
          RowBox[{"3", "/", "2"}]]}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox["a", 
          RowBox[{"5", "/", "2"}]]}]}], ")"}]}], ")"}], " ", 
    SuperscriptBox["w", 
     RowBox[{"5", "/", "2"}]]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "w", "]"}], 
     RowBox[{"7", "/", "2"}]],
    SeriesData[$CellContext`w, 0, {}, 1, 7, 2],
    Editable->False]}],
  SeriesData[$CellContext`w, 
   0, {$CellContext`a^Rational[3, 2], 0, 
    Rational[-1, 4] $CellContext`a ((-5) $CellContext`a^Rational[1, 2] + 
     2 $CellContext`a^Rational[3, 2]), 0, 
    Rational[-1, 96] $CellContext`a ((-77) $CellContext`a^Rational[1, 2] + 
     84 $CellContext`a^Rational[3, 2] + 12 $CellContext`a^Rational[5, 2])}, 1,
    7, 2],
  Editable->False]], "Output",
 CellChangeTimes->{3.8897965108957214`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"14633a97-e1dc-4706-8392-d8e759e9717e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"approx", "[", 
   RowBox[{"x_", ",", "a_"}], "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"a", "^", 
    RowBox[{"(", 
     RowBox[{"-", "x"}], ")"}]}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["a", 
          RowBox[{"3", "/", "2"}]], " ", 
         SqrtBox["w"]}], "-", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"a", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "5"}], " ", 
              SqrtBox["a"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["a", 
               RowBox[{"3", "/", "2"}]]}]}], ")"}]}], ")"}], " ", 
         SuperscriptBox["w", 
          RowBox[{"3", "/", "2"}]]}]}], ")"}], "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "x"}], "*", "w"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", "0", ",", "Infinity"}], "}"}], ",", 
     RowBox[{"Assumptions", "->", 
      RowBox[{
       RowBox[{"x", ">", "0"}], " ", "&&", " ", 
       RowBox[{"a", " ", ">", " ", "0"}]}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.889796547538398*^9, 3.8897966041660023`*^9}, {
  3.889796664572776*^9, 3.8897966652871027`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0623f464-b5eb-458d-aadb-c9f06760932b"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", 
    RowBox[{
     FractionBox["3", "2"], "-", "x"}]], " ", 
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"(", 
    RowBox[{"15", "-", 
     RowBox[{"6", " ", "a"}], "+", 
     RowBox[{"8", " ", "x"}]}], ")"}]}], 
  RowBox[{"16", " ", 
   SuperscriptBox["x", 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.8897966126890144`*^9, 3.889796667899027*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0dd5c7f3-f406-4e38-9afd-3e3085c30cf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exact", "[", 
   RowBox[{"x_", ",", "a_"}], "]"}], "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"t", 
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"t", "+", "a"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"-", "x"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{
      RowBox[{"x", ">", "0"}], " ", "&&", " ", 
      RowBox[{"a", " ", ">", " ", "0"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8897966798317976`*^9, 3.8897966831971903`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"2c4fec68-2368-48f0-be14-dba15bebdccf"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}]}]], 
  RowBox[{
   SuperscriptBox["a", 
    RowBox[{"-", "x"}]], " ", "\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "a"}]}], ")"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], ",", "x", ",", "1", ",", 
        RowBox[{"-", 
         FractionBox["1", "a"]}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "a"}], "+", 
        RowBox[{"2", " ", "x"}]}], ")"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        FractionBox["1", "2"], ",", "x", ",", "1", ",", 
        RowBox[{"-", 
         FractionBox["1", "a"]}]}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8897966918057165`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"66362426-1678-4f92-82fe-9a5c0712c8d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"exact", "[", 
        RowBox[{"x", ",", "a"}], "]"}], ",", 
       RowBox[{"approx", "[", 
        RowBox[{"x", ",", "a"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "50"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Solid", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", " ", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<I(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], 
         "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"TicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<exact\>\"", ",", "\"\<asymptotic approximation\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8897967017750807`*^9, 3.8897967159128532`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"37cc57c3-90c7-47a3-b8df-e2e533536b9d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0.1, 10}}, Typeset`size$$ = {
    570., {106., 111.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0.1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`exact[$CellContext`x, $CellContext`a$$], 
         $CellContext`approx[$CellContext`x, $CellContext`a$$]}, \
{$CellContext`x, 1, 50}, PlotStyle -> {
          Directive[$CellContext`Solid, 
           Thickness[0.01]], 
          Directive[Dashed, 
           Thickness[0.01]]}, AxesLabel -> {
          Style["x", Italic, 18], 
          Style["I(x)", Italic, 18]}, TicksStyle -> Directive[FontSize -> 14],
         PlotLegends -> {"exact", "asymptotic approximation"}], 
      "Specifications" :> {{$CellContext`a$$, 0.1, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{618., {149.63403309800196`, 155.36596690199804`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8897967166318245`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"e6c791e5-ec3a-4334-ac92-341a62a1de8e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 3", "Section",
 CellChangeTimes->{{3.8194772128885565`*^9, 
  3.819477213817498*^9}},ExpressionUUID->"53360077-b126-4736-89d5-\
442e353af9f0"],

Cell[TextData[{
 "Use the method of stationary phase to find the leading behaviors of the \
follow integrals as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1bf96c5b-a143-4e84-b846-5f5e2fd81cda"],
 ".\n(a) ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "1"], "tan", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"], 
            SuperscriptBox[
             StyleBox["t", "TI"], "4"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{1}\\tan(t)e^{ixt^4}dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4c7d53e1-9f92-40c2-a89f-c432dd214214"],
 "\nLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          StyleBox["u", "TI"], "\[LongEqual]", 
          SuperscriptBox[
           StyleBox["t", "TI"], "2"], "\[DoubleLongRightArrow]", 
          StyleBox["d", "TI"], 
          StyleBox["u", "TI"], "\[LongEqual]", "2", 
          StyleBox["t", "TI"], 
          StyleBox["d", "TI"], 
          StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
      "u=t^2 \\implies du = 2tdt", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "."}], TraditionalForm]],ExpressionUUID->
  "18ed594c-cf9b-4425-a563-b3a0500874e9"],
 " This yields the integral:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "1"], 
         FractionBox[
          RowBox[{"tan", "(", 
            SqrtBox[
             StyleBox["u", "TI"]], ")"}], 
          RowBox[{"2", 
            SqrtBox[
             StyleBox["u", "TI"]]}]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"], 
            SuperscriptBox[
             StyleBox["u", "TI"], "2"]}]], 
         StyleBox["d", "TI"], 
         StyleBox["u", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{1}\\frac{\\tan(\\sqrt{u})}{2\\sqrt{u}}e^{ixu^2}du", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6b804a3a-ad98-4336-9576-51866d3705f7"],
 "\n Here, we see that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["f", "TI"], 
         RowBox[{"(", 
           StyleBox["u", "TI"], ")"}], "\[LongEqual]", 
         FractionBox[
          RowBox[{"tan", "(", 
            SqrtBox[
             StyleBox["u", "TI"]], ")"}], 
          RowBox[{"2", 
            SqrtBox[
             StyleBox["u", "TI"]]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "f(u) =\\frac{\\tan(\\sqrt{u})}{2\\sqrt{u}}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "adf7747d-ec06-46e9-9f6e-c12007dfc4a1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{"\[Phi]", 
          RowBox[{"(", 
            StyleBox["u", "TI"], ")"}], "\[LongEqual]", 
          SuperscriptBox[
           StyleBox["u", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
      "input" -> "\\phi(u) = u^2", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "."}], TraditionalForm]],ExpressionUUID->
  "440c0b72-5708-4e29-86e5-61718e94b41b"],
 " This means that the stationary point is given when ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]"], 
         RowBox[{"(", 
           StyleBox["u", "TI"], ")"}], "\[LongEqual]", "2", 
         StyleBox["u", "TI"], "\[LongEqual]", "0", "\[DoubleLongRightArrow]", 
         StyleBox["u", "TI"], "\[LongEqual]", "0."}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\phi'(u) = 2u = 0 \\implies u = 0.", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a6ad44b9-4f6d-47db-9140-590be4f8fcd7"],
 " Hence, by the relation from lecture on a boundary point of: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"I", "(", "x", ")"}], " ", "\[Tilde]", " ", 
     RowBox[{
      RowBox[{"1", "/", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], 
         RowBox[{"x", "|", 
          RowBox[{
           RowBox[{"\[Phi]", "''"}], 
           RowBox[{"(", "a", ")"}]}], "|"}]], ")"}], 
       RowBox[{"1", "/", "2"}]], 
      RowBox[{"f", "(", "a", ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "x", " ", 
         RowBox[{"\[Phi]", "(", "a", ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{
          RowBox[{"sgn", "(", 
           RowBox[{
            RowBox[{"\[Phi]", "''"}], 
            RowBox[{"(", "a", ")"}]}], ")"}], "/", "4"}]}]}]]}]}], ",", "   ", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"+", "\[Infinity]"}]}]}], TraditionalForm]],ExpressionUUID->
  "0fce9e27-6f04-407a-a5f0-9e3b98617035"],
 " we have that:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[Tilde]", 
         FractionBox["1", "4"], 
         SuperscriptBox[
          RowBox[{"(", 
            FractionBox["\[Pi]", 
             StyleBox["x", "TI"]], ")"}], 
          FractionBox["1", "2"]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          FractionBox[
           RowBox[{
             StyleBox["i", "TI"], "\[Pi]"}], "4"]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "I(x) \\sim \
\\frac{1}{4}(\\frac{\\pi}{x})^{\\frac{1}{2}}e^{\\frac{i\\pi}{4}}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fb099aac-f4a0-445b-958a-4400c85539f0"]
}], "Text",
 CellChangeTimes->{{3.819477217465713*^9, 3.8194772281844006`*^9}, {
   3.889619833245161*^9, 3.889619883163751*^9}, {3.8897066649758873`*^9, 
   3.8897067005229645`*^9}, {3.88970685236736*^9, 3.8897068669167566`*^9}, {
   3.88970695580344*^9, 3.8897069674896317`*^9}, {3.889707044023578*^9, 
   3.8897071605906115`*^9}, {3.8897072570504856`*^9, 3.889707267751511*^9}, {
   3.889707337368963*^9, 3.8897073406025686`*^9}, {3.8897073728651123`*^9, 
   3.8897073858315954`*^9}, 3.889707448386675*^9, {3.8897086417223406`*^9, 
   3.8897086887069073`*^9}, {3.889708752860367*^9, 
   3.889708843778057*^9}},ExpressionUUID->"fd8fe25a-0bda-453f-93cc-\
c04259d41a4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", "t", "]"}], "*", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", "*", "x", "*", 
            RowBox[{"(", 
             RowBox[{"t", "^", "4"}], ")"}]}], ")"}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "4"}], ")"}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "/", "x"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}], "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", 
          RowBox[{"Pi", "/", "4"}]}], ")"}]}]}], " ", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<I(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.889707450463293*^9, 3.889707634233859*^9}, 
   3.889707756148244*^9, {3.889708187066655*^9, 3.8897082376107144`*^9}, {
   3.889795463737608*^9, 3.889795467490135*^9}, {3.88979550375389*^9, 
   3.889795537441616*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"0d5d2eae-79b0-447e-98b2-9b8c703fdd72"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$204651#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$204651#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.036833266047929525`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"I(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0.03683326604792944}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 50}, {0.03683326604792944, 0.1765084381643296}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.889707520636801*^9, 3.8897079613809032`*^9, 
  3.8897082020724983`*^9, 3.8897082478203945`*^9, 3.8897955477724867`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"954635fd-b2d3-4e72-9e0a-c1c8faea14d0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.889707611034813*^9, 
  3.889707638497849*^9}},ExpressionUUID->"77203a46-e0d6-4154-bb56-\
bc08fc24b29c"],

Cell[TextData[{
 "(b) ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", 
          FractionBox["1", "2"], "2"], 
         RowBox[{"(", 
           RowBox[{"1", "+", 
             StyleBox["t", "TI"]}], ")"}], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], 
            StyleBox["x", "TI"], 
            RowBox[{"(", 
              RowBox[{
                SuperscriptBox[
                 StyleBox["t", "TI"], "3"], "/", "3", "-", 
                StyleBox["t", "TI"]}], ")"}]}]], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{\\frac{1}{2}}^{2}(1+t)e^{ix(t^3/3-t)}dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c5aeb987-0d7b-449d-a789-ba217193a429"],
 ".\nAs before, we take ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          StyleBox["f", "TI"], 
          RowBox[{"(", 
            StyleBox["t", "TI"], ")"}], "\[LongEqual]", "1", "+", 
          StyleBox["t", "TI"], ",", "\[Phi]", 
          RowBox[{"(", 
            StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
          FractionBox[
           SuperscriptBox[
            StyleBox["t", "TI"], "3"], "3"], "-", 
          StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
      "f(t) =1 + t,\\phi(t) = \\frac{t^3}{3}-t", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "."}], TraditionalForm]],ExpressionUUID->
  "ea8960f4-6306-47a3-a760-111f3153fbbd"],
 " This means we have ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox["\[Phi]", "\[Prime]"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["t", "TI"], "2"], "-", "1", "\[LongEqual]", "0", 
         "\[DoubleLongRightArrow]", 
         StyleBox["t", "TI"], "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\phi'(t) = t^2-1 = 0 \\implies t =1", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4eada6ec-1a73-4598-b1a0-672d63ffd0f2"],
 ", since we are only concerned with the values within our bounds of \
integration. Since this is not an end point, we use:\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"I", 
     RowBox[{"(", "x", ")"}]}], " ", "\[Tilde]", " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], 
        RowBox[{"x", "|", 
         RowBox[{
          RowBox[{"\[Phi]", "''"}], 
          RowBox[{"(", "a", ")"}]}], "|"}]], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"f", "(", "a", ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "x", " ", 
        RowBox[{"\[Phi]", "(", "a", ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
        RowBox[{
         RowBox[{"sgn", "(", 
          RowBox[{
           RowBox[{"\[Phi]", "''"}], 
           RowBox[{"(", "a", ")"}]}], ")"}], "/", "4"}]}]}]]}]}], ",", "   ", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"+", "\[Infinity]"}]}]}]],ExpressionUUID->
  "a19f0424-20d7-4f00-adad-cfb0d837a3df"],
 " . This yields:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[Tilde]", "2", 
         SuperscriptBox[
          RowBox[{"(", 
            FractionBox["\[Pi]", 
             StyleBox["x", "TI"]], ")"}], 
          FractionBox["1", "2"]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            FractionBox[
             RowBox[{"-2", 
               StyleBox["i", "TI"], 
               StyleBox["x", "TI"]}], "3"], "+", 
            StyleBox["i", "TI"], 
            FractionBox["\[Pi]", "4"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "I(x) \\sim 2(\\frac{\\pi}{x})^{\\frac{1}{2}}e^{\\frac{-2ix}{3}+i\\frac{\
\\pi}{4}}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6653a8ba-0cd0-4a4f-8c93-f114dec87928"]
}], "Text",
 CellChangeTimes->{{3.8897080570026083`*^9, 3.8897080610003724`*^9}, {
  3.889708123989667*^9, 3.8897081481250105`*^9}, {3.889708197477483*^9, 
  3.889708208969428*^9}, {3.889708245159848*^9, 
  3.889708356284403*^9}},ExpressionUUID->"c94c42fe-73a3-482f-87cf-\
9d97af79967e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "t"}], ")"}], "*", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{"I", "*", "x", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"t", "^", "3"}], "/", "3"}], " ", "-", "t"}], ")"}]}], 
           ")"}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"1", "/", "2"}], ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"2", " ", "*", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "/", "x"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}], "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "*", "I", "*", "x"}], ")"}], "/", "3"}], " ",
           "+", " ", 
          RowBox[{"(", 
           RowBox[{"I", "*", 
            RowBox[{"Pi", "/", "4"}]}], ")"}]}], ")"}]}]}], " ", "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<I(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.889708485585517*^9, 3.889708562339042*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6680ef7e-792b-4201-94ac-0fed74aa4e71"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
1WPPomVrkUN692etPHNIW/ym9jsmGFvuDyAdfGQOXVqWlporF7ER76bq0Cfm
EOpkt0e1Kx3LJBFyXz81h3urz38/pzzAY+HXwvZWMPn63HHgmXyGzx+jKJz8
YA7Ge62N/0W/wk+0y85nD5uD9embW3ce+oz9RGZWqkfN4dixrFsK0l8wYVU7
5Nu4OcTXVyao077gN+9KT3NMm8O2IeV7PqdbcJdDqeOpZXM4xPLOgeVlK+aM
LtHdyUWBQu2hTLdH7bjl2NSz/TwUyFy/9AmxdOAMCy0VHz4K2HlEe8U6d2AZ
gZLt97ZQgPsMKVSE7zsm5j3nZZOkgDblNOfuUz+w96dnQ82qFPDyHXybxdaN
NZ9PHBtWp0C1woYhc7tuPJ+u0cuiRYGuzw4GSg+7cazLs3Y9PQrw8wf5phj3
4Myp4jd3jCggR4hyz/D5iRtFirNOWFMgOXqtrzWL+d5aHReJ2UeBDVFX9/79
1Yvt+9WuZ9pSQLNlvQ+29eGBgqcXP9tT4NPRNZWN2X142ehpsI4rBaK+qVcc
Tu/HKh5F+/6eoUCqdzHfgccDuPG+YemsPwVW7ESSuOoGsFd305aRsxR4aMx7
7sD3AZxvO97RFkIB3om9qVfZqFgGqR8piKZAEcu9L08OUzGOePXqfgwF5n3l
tJpPU7FblfW2G3EUkE9xnI6OoeK7Gmeo0RcooPxK4FXMIyoWlX5+8uBVCvh8
fXN8eZyKKw+bfrK8RgGb/zSv+65Rsf2NFlXT6xTQzV5t9Oal4evcUxPKNynw
eKfN6JIqDWtbxOzfdpsCebM3ZZMNaLglbnOZ0B0mv8fvN+XtpmHeFa3g9XsU
ED0ZknXSg4afEt58n8umQOIB6xeC/jRsFWC7a/QBBeL1qqzIkTR8cThgtT2f
AtHe9gt66TSsKMfq8ukxBdTa8lPm7tHwe7frr+sKKHBuub5o1xMaZvtRFltY
TAHpYXKJdS0NP9xiRst+TgFiZLnu1nc0DDZt5IxSph57eSPPfqbhvksejy6/
oIDnyrmje9ppOPr97MaYCgp86/Koze+hYWmWBO/gKgow7kb5JFBpuNZIqMmn
hgJL1BqbwWEadjqXp3a0lgKO5fv3Nk3Q8PILvav2ryjgPfR6j+4cDd+efDe5
p44CP/0+6G1dpuGdqva26A0FFm+dWUpeo+GOE4wyQj0F7smyJ0Wy0HHQw2Ah
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
          "]]}, Annotation[#, "Charting`Private`Tag$672473#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
V+qoOQjK7+rWTn+D3M481Bc5aQ6uPdz/HudWIA1pUwK3nzncS/QfeO9Sjb6e
OYemIsxB/2DX4x82dUjgvzm76nRzmI88nmXf0oo+1v+0r8xgx9908Li44jcU
Fvhhd0WWOXAO3Tt9KOIbotYn7Sl5bA47ZPnUDim1oeJAnf15BeagtnP3eWZo
O9rb4O+W8N4cHjK+eUqvdCKuICf321Xm0Lz6/EKl1XdU8Z/ZodhqcxA/Ktj7
Nvk7kg3aeOTKR3PIbUinvFfvQjP/FRwP+2IOX3f+Hnjp+APdCRo5daTXHIRs
ShdzLvUgKcvwM/v62fmkL87VfuhBORJ8YZZUcyC2vL6qxPkTvapUv6rONAdv
w5zJN5d+otYNAZlLY+YgUdDwuTG0Fzn3cDwd+8Xml3Jdl17ci6gFiQX9k+ZQ
GCDSpDveiyb3vH77cdYcVA+zqkIP9aFN6QvtCb/NQUnG3+WYUT9K8Y/pufzH
HLLaJipE/PvRfyQJWug/c+hdtSXPZfcjdZbRhNs6MuyVli802DCAbLUjuVX4
yLAS7BacWT+A2tZu2iy9kQw73lv5pc4PINfODNHNm8nAGy911lWQik6FV8vO
C5Fh+ciQsCqRiq5/XEeskSKDuvCyUEw8FQncSyaXSJOBc+P3qbWPqOiet4JN
7lYy/HHeHc1fRkVPN1kduC1Lhv/2+TDretj3RVqXe7Q8GRwuMH6EjlNR2Wuv
E0GKZJg3yqt69YeKPjnHnnFRJcN9XI6/bKWhXWpbwnapk4FZeF/4mSYNdfx5
fgFpkuG46EKjoBkNMXOabyroksH4Rf70hYM0tPaXwNNpIzIclaMO1iXQUCzO
LmCakCHe79HUr3QaEkzSfd1FJMOmt3Pf0/NoSMbQsbqSxN5vLqiVWEVDeTyD
dUVkMuxOA4XvDTSk3RvS/IhChtgPDf+y22gIXbzXc2Mnm6/8yO1mJg3V7VOm
RdiSoVTx1oD6LxqyV3w7dNqODGXhmXuE5mno+9LOiWO72Xq80n8XuUpDhz73
zO3fQwY7ZsqC/zo6Yj30+W29jwyme2xpgzx05BewusZ0Pxl8/gm60TfT0Zz5
bW6tA2TQN2TZnBClowjRrZtlXchw6tffZB8pOmou5nFFB8ngWColv38bHW21
n3/s5k6G5w91dhTK0ZH/KHXy3GEyeKGb5aFKdISvfTG+d5QMGaKj6YWqdCQg
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
Fu7n+09MTxO8db6xXdW6Fv4FhmCiOw==
          "]]}, Annotation[#, "Charting`Private`Tag$672473#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"I(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50}, {-1.646672581183609, 2.455773230185808}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.889708574920415*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d594d206-ca46-4286-b7d6-7a0425f636aa"]
}, Open  ]],

Cell[TextData[{
 "(c) ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "1"], "cos", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], 
             SuperscriptBox[
              StyleBox["t", "TI"], "4"]}], ")"}], "tan", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{1}\\cos(xt^4)\\tan(t)dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4adbc276-310a-4b00-8d5d-c47230dc3a76"],
 "\nHere, we recognize that the cosine term can be treated as the real part \
of the imaginary exponential expansion ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SuperscriptBox[
         StyleBox["e", "TI"], 
         RowBox[{
           StyleBox["i", "TI"], 
           StyleBox["x", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
      "e^{ix}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], ".", " "}], TraditionalForm]],ExpressionUUID->
  "f9cd4f61-a2af-414e-811d-fd310f44da3a"],
 " This means we can harness the solution of 3a by:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "1"], "cos", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], 
             SuperscriptBox[
              StyleBox["t", "TI"], "4"]}], ")"}], "tan", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"], "\[LongEqual]", 
         SubsuperscriptBox["\[Integral]", "0", "1"], 
         StyleBox["R", "TI"], 
         StyleBox["e", "TI"], 
         RowBox[{"(", 
           SuperscriptBox[
            StyleBox["e", "TI"], 
            RowBox[{
              StyleBox["i", "TI"], 
              StyleBox["x", "TI"], 
              SuperscriptBox[
               StyleBox["t", "TI"], "4"]}]], ")"}], "tan", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\int_{0}^{1}\\cos(xt^4)\\tan(t)dt = \
\\int_{0}^{1}Re(e^{ixt^4})\\tan(t)dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "154aa53b-9921-471b-851f-e69655598dff"],
 ". Hence we get:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["I", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[Tilde]", 
         FractionBox["1", "4"], 
         StyleBox["R", "TI"], 
         StyleBox["e", "TI"], 
         RowBox[{"(", 
           RowBox[{
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{
                StyleBox["i", "TI"], "\[Pi]", "/", "4"}]], 
             SqrtBox[
              FractionBox["\[Pi]", 
               StyleBox["x", "TI"]]]}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "I(x) \\sim \\frac{1}{4}Re(e^{i\\pi/4}\\sqrt{\\frac{\\pi}{x}})", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9733024d-e3d9-4c11-8287-33f1f95709ba"]
}], "Text",
 CellChangeTimes->{{3.8897949305039377`*^9, 3.889794943332719*^9}, {
  3.889794997279123*^9, 3.8897950645120296`*^9}, {3.8897951255115633`*^9, 
  3.8897951389684944`*^9}},ExpressionUUID->"20abf900-0be7-41bc-9809-\
c50016eb51de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"x", "*", 
           RowBox[{"t", "^", "4"}]}], "]"}], "*", 
         RowBox[{"Tan", "[", "t", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "4"}], ")"}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "/", "x"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}]}], "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"I", "*", 
          RowBox[{"Pi", "/", "4"}]}], ")"}]}]}], " ", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "50"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", " ", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Re[I(x)]\>\"", ",", " ", "Italic", ",", " ", "18"}], 
       "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.889795259901426*^9, {3.8897953912324753`*^9, 3.8897954342875767`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"59df402d-6231-4163-9c52-baf12b7bb6d0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwUWHc81e8Xt8pIdjbZm1zrco1zqIymVAqZFYoSqSQkIQnfSCUVknHta10z
MlNEQ0iUrAopK7L6fX5/3df79Tyfc877fc5znvNcaTcfm5NMDAwM5RsYGP7/
uynQh5OR4Td07YlfPh/5FbytLYz+M/4NA4n1Rd4Xv0KnwlZviSu/wagoLkfH
/SskvO9sN/jzG3jFGW7o7PwKouoat/ymZkBq3nuNifErKA9NsY/2zcGolvPf
I+eGwML8NOuL4kVInTB1FTrxGajiZuTDvxahudt5ZgvlM3DMiXiMqC2BxLHZ
wI/cn6Ez9WXrv+wlyF76/aqsehBs/ypF6qf8BWqJ8cDXzYNwMv8bS270CnBS
eK7vzPsE1/lOMsUe/wcT4v88B9r7IIjyH80y6x+sCp4q1XzQBxfdqpxYfvwD
S0emR+fd+0DnY+SgMZkBwyulT3Yw9IGC8ieD8loG7JR7ErGi0wubXl6fffqC
Ef3LfF/3P/oAH9g+HL82yIz9e37o0S6+g3fiE5Qv68w4HSITrbfzHXRq/uM1
lmLBy/8dWfvK/w7ajio/X3JjwekDr28WFr+Famqw+LnvLNi/UzLM6tcbSLFU
+OA0twErdLS7C751gmfUJXMjdjYcuzT/cNvRl3Bi6Tv3CSU2PCF5y4PK/hKc
Pe0/3rJgQ231ulcFNW1ga2ns/SmCDc/KSIaelG6DHWzMCYFM7GhH3kGummsF
qai4wcoVdjwcfe+1U3kziC/9yxoS5cA+YR3GU+eaQcjT9xwbhQOLHuxQFlFr
Bi7LQ8xHAzgwJZEz51xmE6yyiiovznOgxUrQn61pjdB7I9Nfd3oTqqBQQhj9
ObxbFDRx3MyJU9SJm1eCnkOnRxRrhBon2gSXkdS2P4dmC6/k7tOcSL/86a1P
Zj2UsJKen//GiSfaotQlFp5B4aX0mw83bkZhfdmu8phnkPON/2CT/GZUov27
+VL+GaS9+DPGd2IzyrFrzrkfq4W4G7WbSoY2Y2dVa9K9T9UQvaj+4eO/zajx
cuSK/NVqiPBITWHcyoU91XxSZLlqCLIIIx1w5MLHpxx3jflVwWlWyyO/P3Jh
ok3NzBWZSjC/8T5d4z03vi2pX37/qhw+TlGWqma4MddBbh9XVDnoKb/NkmHj
wZJJprP15uXwKk5/tUCBBysGbr8MbyuDWTvW7ObjPDiQafHyv8FSqOWsOcBx
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
mpzkgWn85dG/f2m8Ov2CsCmdB/8DtmHXJQ==
          "]]}, Annotation[#, "Charting`Private`Tag$74247#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
D5fZbALf1a+IruWR8D8SE6/D
          "]]}, Annotation[#, "Charting`Private`Tag$74247#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.036833266047929525`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"Re[I(x)]\"", Italic, 18, StripOnInput -> False], 
         HoldForm], TraditionalForm]}, AxesOrigin -> {0, 0.03683326604792944},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.889795418433841*^9, 3.889795441262737*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"47c441d2-f24c-4ca8-9692-7e98eedb14fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{760.5, 765.75},
WindowMargins->{{180.75, Automatic}, {Automatic, 10.5}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 27, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d75e67b7-b5ca-4e2d-9fea-0daa88af3a50"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 216, 4, 98, "Title",ExpressionUUID->"197654a4-4d8f-4ad2-acd2-0426bba106a8"],
Cell[799, 28, 207, 4, 31, "Author",ExpressionUUID->"47fdc244-5ee2-4b42-93c3-40f677fdf9ef"],
Cell[1009, 34, 214, 4, 31, "Affiliation",ExpressionUUID->"581392a7-3011-4211-898e-5aefcdf8effb"],
Cell[CellGroupData[{
Cell[1248, 42, 158, 3, 67, "Section",ExpressionUUID->"3b0f5f64-fd7d-4b7d-9281-4b7c9c73d5a2"],
Cell[1409, 47, 7224, 191, 208, "Text",ExpressionUUID->"d8fb54c8-1da0-4208-b74e-3f8dbdd27abd"],
Cell[CellGroupData[{
Cell[8658, 242, 976, 29, 28, "Input",ExpressionUUID->"f22725c5-3a13-4374-853f-53bb9bcaca7d"],
Cell[9637, 273, 778, 22, 51, "Output",ExpressionUUID->"0e69d81c-0853-4d8a-99cd-603989a853e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10452, 300, 694, 18, 28, "Input",ExpressionUUID->"be4e59ce-40fc-49bd-a610-cb6bbea6a01c"],
Cell[11149, 320, 902, 27, 51, "Output",ExpressionUUID->"245f7498-8885-4fd6-ae61-4bdce26667e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12088, 352, 1382, 36, 86, "Input",ExpressionUUID->"d3f69863-c15b-490e-be9f-c815925a20a1"],
Cell[13473, 390, 60223, 1049, 242, "Output",ExpressionUUID->"43d5b514-6ef9-4c76-88ab-71601afaf89d"]
}, Open  ]],
Cell[73711, 1442, 598, 14, 60, "Text",ExpressionUUID->"0dd2db84-9f7a-44dc-865d-31d667d9db28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74346, 1461, 156, 3, 67, "Section",ExpressionUUID->"3f070b75-5760-46e2-8dfd-1b5d3e237d45"],
Cell[74505, 1466, 7474, 201, 258, "Text",ExpressionUUID->"ac4970ba-4670-4dab-9885-453ea799808e"],
Cell[CellGroupData[{
Cell[82004, 1671, 793, 23, 28, "Input",ExpressionUUID->"fb9c3ad2-c02e-465a-b8a8-b9c8d7a7844e"],
Cell[82800, 1696, 1716, 53, 48, "Output",ExpressionUUID->"14633a97-e1dc-4706-8392-d8e759e9717e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84553, 1754, 1441, 43, 94, "Input",ExpressionUUID->"0623f464-b5eb-458d-aadb-c9f06760932b"],
Cell[85997, 1799, 503, 15, 58, "Output",ExpressionUUID->"0dd5c7f3-f406-4e38-9afd-3e3085c30cf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86537, 1819, 865, 26, 48, "Input",ExpressionUUID->"2c4fec68-2368-48f0-be14-dba15bebdccf"],
Cell[87405, 1847, 1233, 39, 88, "Output",ExpressionUUID->"66362426-1678-4f92-82fe-9a5c0712c8d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88675, 1891, 1597, 40, 105, "Input",ExpressionUUID->"37cc57c3-90c7-47a3-b8df-e2e533536b9d"],
Cell[90275, 1933, 2061, 42, 324, "Output",ExpressionUUID->"e6c791e5-ec3a-4334-ac92-341a62a1de8e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92385, 1981, 156, 3, 67, "Section",ExpressionUUID->"53360077-b126-4736-89d5-442e353af9f0"],
Cell[92544, 1986, 7022, 186, 313, "Text",ExpressionUUID->"fd8fe25a-0bda-453f-93cc-c04259d41a4f"],
Cell[CellGroupData[{
Cell[99591, 2176, 2218, 60, 105, "Input",ExpressionUUID->"0d5d2eae-79b0-447e-98b2-9b8c703fdd72"],
Cell[101812, 2238, 40976, 729, 248, "Output",ExpressionUUID->"954635fd-b2d3-4e72-9e0a-c1c8faea14d0"]
}, Open  ]],
Cell[142803, 2970, 152, 3, 28, "Input",ExpressionUUID->"77203a46-e0d6-4154-bb56-bc08fc24b29c"],
Cell[142958, 2975, 4590, 124, 197, "Text",ExpressionUUID->"c94c42fe-73a3-482f-87cf-9d97af79967e"],
Cell[CellGroupData[{
Cell[147573, 3103, 2367, 68, 105, "Input",ExpressionUUID->"6680ef7e-792b-4201-94ac-0fed74aa4e71"],
Cell[149943, 3173, 57588, 1003, 249, "Output",ExpressionUUID->"d594d206-ca46-4286-b7d6-7a0425f636aa"]
}, Open  ]],
Cell[207546, 4179, 3581, 96, 185, "Text",ExpressionUUID->"20abf900-0be7-41bc-9809-c50016eb51de"],
Cell[CellGroupData[{
Cell[211152, 4279, 2083, 57, 105, "Input",ExpressionUUID->"59df402d-6231-4163-9c52-baf12b7bb6d0"],
Cell[213238, 4338, 42297, 749, 251, "Output",ExpressionUUID->"47c441d2-f24c-4ca8-9692-7e98eedb14fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

