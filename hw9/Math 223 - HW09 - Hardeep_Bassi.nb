(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    269026,       5322]
NotebookOptionsPosition[    262151,       5202]
NotebookOutlinePosition[    262560,       5218]
CellTagsIndexPosition[    262517,       5215]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Math 223: Homework 9", "Title",
 CellChangeTimes->{{3.819477029542458*^9, 3.8194770325147047`*^9}, {
  3.8902555587517824`*^9, 
  3.8902555594215736`*^9}},ExpressionUUID->"197654a4-4d8f-4ad2-acd2-\
0426bba106a8"],

Cell["<Hardeep Bassi>", "Author",
 CellChangeTimes->{{3.819477041266364*^9, 3.81947704456911*^9}, {
  3.890255561924615*^9, 
  3.890255565269107*^9}},ExpressionUUID->"47fdc244-5ee2-4b42-93c3-\
40f677fdf9ef"],

Cell["<04/11/2023>", "Affiliation",
 CellChangeTimes->{{3.8194774638175488`*^9, 3.819477466618027*^9}, {
  3.890255571626941*^9, 
  3.8902555771774096`*^9}},ExpressionUUID->"581392a7-3011-4211-898e-\
5aefcdf8effb"],

Cell[CellGroupData[{

Cell["Problem 1", "Section",
 CellChangeTimes->{{3.8194770755713477`*^9, 
  3.8194770765366144`*^9}},ExpressionUUID->"3b0f5f64-fd7d-4b7d-9281-\
4b7c9c73d5a2"],

Cell[TextData[{
 "Use second-order perturbation theory to find approximations to the roots of \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          SuperscriptBox[
           StyleBox["x", "TI"], "2"], "+", 
          StyleBox["x", "TI"], "+", "6", "\[Epsilon]", "\[LongEqual]", "0"}], 
        TraditionalForm], "errors" -> {}, "input" -> "x^2+x+6\\epsilon = 0", 
      "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "."}], TraditionalForm]],ExpressionUUID->
  "05b5d143-2fc7-4215-96a7-c09452fe041b"],
 "\nUsing the regular perturbation expansion ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Tilde]", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["n", "TI"], "\[LongEqual]", "0"}], "\[Infinity]", 
          LimitsPositioning -> True], 
         SuperscriptBox["\[Epsilon]", 
          StyleBox["n", "TI"]], 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["n", "TI"]], ",", "\[Epsilon]", "\[Rule]", 
         SuperscriptBox["0", "+"]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "x \\sim \\sum_{n=0}^{\\infty}\\epsilon^nx_n, \\epsilon \\to 0^+", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6d7e115b-294f-484a-84fa-d52b6ff6edf2"],
 ", we see the equation becomes:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{
                 StyleBox["n", "TI"], "\[LongEqual]", "0"}], "\[Infinity]", 
               LimitsPositioning -> True], 
              SuperscriptBox["\[Epsilon]", 
               StyleBox["n", "TI"]], 
              SubscriptBox[
               StyleBox["x", "TI"], 
               StyleBox["n", "TI"]]}], ")"}], "2"], "+", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["n", "TI"], "\[LongEqual]", "0"}], "\[Infinity]", 
          LimitsPositioning -> True], 
         SuperscriptBox["\[Epsilon]", 
          StyleBox["n", "TI"]], 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["n", "TI"]], "+", "6", "\[Epsilon]", "\[LongEqual]", "0"}],
        TraditionalForm], "errors" -> {}, "input" -> 
     "(\\sum_{n=0}^{\\infty}\\epsilon^nx_n)^2 + \
\\sum_{n=0}^{\\infty}\\epsilon^nx_n + 6\\epsilon = 0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c8b1ccec-1a76-4605-b834-cc14a0779dc4"],
 ". Now, we compute the solution as:"
}], "Text",
 CellChangeTimes->{{3.819477124705309*^9, 3.8194771397099257`*^9}, {
  3.890255813935092*^9, 3.890255879991207*^9}, {3.890256040224147*^9, 
  3.8902560515089245`*^9}, {3.890256108097334*^9, 3.8902561149827595`*^9}, {
  3.890256190759615*^9, 3.8902562254984827`*^9}, {3.890256302970433*^9, 
  3.890256306360314*^9}},ExpressionUUID->"d8fb54c8-1da0-4208-b74e-\
3f8dbdd27abd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "n", "]"}], 
           SuperscriptBox["\[Epsilon]", "n"]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ")"}], "2"], 
      "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "n", "]"}], 
         SuperscriptBox["\[Epsilon]", "n"]}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], "+", 
      RowBox[{"6", "\[Epsilon]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8902563127322073`*^9, 3.8902563592316504`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4e16bd12-e926-4a45-8468-c0190b309b1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "[", "0", "]"}], "+", 
  SuperscriptBox[
   RowBox[{"x", "[", "0", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.8902563498148036`*^9, 3.8902563599177837`*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"4a311b97-535f-4697-903c-b3ac04df915c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "+", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "^", "2"}]}], " ", "==", " ", "0"}], ",", 
   " ", 
   RowBox[{"x", "[", "0", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.89025638857251*^9, 3.8902564144007945`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"281ad3ab-ef89-4119-8e78-eb3be7e2a73f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "\[Rule]", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "\[Rule]", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.890256415070985*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"1f2835da-e21b-4e88-844c-61fa4a107a76"]
}, Open  ]],

Cell["For each root, we now compute the higher order solutions:", "Text",
 CellChangeTimes->{{3.890256459942932*^9, 
  3.890256471162261*^9}},ExpressionUUID->"77706497-7aaf-437d-8e3f-\
713ea0c7b364"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeriesCoefficient", "[", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "n", "]"}], 
            SuperscriptBox["\[Epsilon]", "n"]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ")"}], "2"], 
       "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "n", "]"}], 
          SuperscriptBox["\[Epsilon]", "n"]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], "+", 
       RowBox[{"6", "\[Epsilon]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", "1"}],
    "]"}], " ", "/.", " ", 
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], " ", "\[Rule]", " ", "0"}]}]], "Input",
 CellChangeTimes->{{3.8902565031036215`*^9, 3.8902565105323772`*^9}, {
  3.8902565554592223`*^9, 3.8902566077402973`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"03493545-ed4b-44da-b25b-0792d01b6dcd"],

Cell[BoxData[
 RowBox[{"6", "+", 
  RowBox[{"x", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{{3.8902565907138014`*^9, 3.8902566119294567`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"db6b2749-8cb1-47a9-baa2-59beb40a61e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeriesCoefficient", "[", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "n", "]"}], 
            SuperscriptBox["\[Epsilon]", "n"]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ")"}], "2"], 
       "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "n", "]"}], 
          SuperscriptBox["\[Epsilon]", "n"]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], "+", 
       RowBox[{"6", "\[Epsilon]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", "2"}],
    "]"}], " ", "/.", " ", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], " ", "\[Rule]", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "\[Rule]", " ", 
     RowBox[{"-", "6"}]}]}], " ", "}"}]}]], "Input",
 CellChangeTimes->{{3.8902567567005596`*^9, 3.890256800887707*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"79e4b9ba-5b2c-4c6f-ac74-abdf9c8ccbaa"],

Cell[BoxData[
 RowBox[{"36", "+", 
  RowBox[{"x", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{{3.890256793319195*^9, 3.8902568011572204`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"7ac79119-ead9-4c4d-8787-9ea10608ad69"]
}, Open  ]],

Cell[TextData[{
 "Hence, we get that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["x", "TI"], "1"], "\[LongEqual]", "-6", "\[Epsilon]", "-", 
         "36", 
         SuperscriptBox["\[Epsilon]", "2"], "+", 
         StyleBox["O", "TI"], 
         RowBox[{"(", 
           SuperscriptBox["\[Epsilon]", "3"], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "x_1 = -6\\epsilon - 36\\epsilon^2 + O(\\epsilon^3)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fed90d46-ecde-4c4d-a273-3756f9616a20"]
}], "Text",
 CellChangeTimes->{{3.8902568115687933`*^9, 
  3.8902568153054657`*^9}},ExpressionUUID->"7b3bfad7-82fc-4c58-a913-\
1fad25edeb35"],

Cell["Repeating the same for the other root yields:", "Text",
 CellChangeTimes->{{3.890256951773016*^9, 
  3.890256976121249*^9}},ExpressionUUID->"9cef7e80-acbe-4c33-a2db-\
94f751f75d84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeriesCoefficient", "[", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "n", "]"}], 
            SuperscriptBox["\[Epsilon]", "n"]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ")"}], "2"], 
       "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "n", "]"}], 
          SuperscriptBox["\[Epsilon]", "n"]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], "+", 
       RowBox[{"6", "\[Epsilon]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", "1"}],
    "]"}], " ", "/.", " ", 
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], " ", "\[Rule]", " ", 
   RowBox[{"-", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.8902569865204425`*^9, 3.8902569881400948`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2d93a13e-4291-40b1-bc1e-ad447a6c83cc"],

Cell[BoxData[
 RowBox[{"6", "-", 
  RowBox[{"x", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.89025698886397*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"1e5215ac-b326-4af7-bc09-607d9cf52617"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeriesCoefficient", "[", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", "n", "]"}], 
            SuperscriptBox["\[Epsilon]", "n"]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ")"}], "2"], 
       "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "n", "]"}], 
          SuperscriptBox["\[Epsilon]", "n"]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], "+", 
       RowBox[{"6", "\[Epsilon]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", "2"}],
    "]"}], " ", "/.", " ", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], " ", "\[Rule]", " ", 
     RowBox[{"-", "1"}]}], ",", " ", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], "\[Rule]", " ", "6"}]}], " ", 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.890257007880866*^9, 3.8902570267270184`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"642a9572-c86c-4bd3-a130-d92736a2dc09"],

Cell[BoxData[
 RowBox[{"36", "-", 
  RowBox[{"x", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{3.89025702722828*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"df9b507a-1813-4389-8446-7ec71a61c57e"]
}, Open  ]],

Cell[TextData[{
 "Hence, we get that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["x", "TI"], "2"], "\[LongEqual]", "-1", "+", "6", 
         "\[Epsilon]", "+", "36", 
         SuperscriptBox["\[Epsilon]", "2"], "+", 
         StyleBox["O", "TI"], 
         RowBox[{"(", 
           SuperscriptBox["\[Epsilon]", "3"], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "x_2 = -1 +6\\epsilon +36\\epsilon^2 + O(\\epsilon^3)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8bb71130-4f7e-4e7f-8b64-c5042dc41a73"]
}], "Text",
 CellChangeTimes->{{3.8902570406900873`*^9, 
  3.8902570479926186`*^9}},ExpressionUUID->"c88b7d0f-89c0-4340-a3b7-\
de406558cbcc"],

Cell["", "Text",
 CellChangeTimes->{{3.8902566525475855`*^9, 3.890256666309886*^9}, 
   3.8902567461003933`*^9},ExpressionUUID->"5069ba28-e1d1-49a1-8d12-\
1d853058007c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2", "Section",
 CellChangeTimes->{{3.819477185401244*^9, 
  3.8194771863519216`*^9}},ExpressionUUID->"3f070b75-5760-46e2-8dfd-\
1b5d3e237d45"],

Cell[TextData[{
 "Compute all of the coefficients in the perturbation series solution to the \
initial-value problem ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]"], "\[LongEqual]", 
         StyleBox["y", "TI"], "+", "\[Epsilon]", 
         StyleBox["x", "TI"], 
         StyleBox["y", "TI"], ",", 
         StyleBox["y", "TI"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "y' = y+\\epsilon xy, y(0) = 1", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b7250da8-5314-4e14-99cf-c3dbd5e7b718"],
 ". Also show that the series converges for all values of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["\[Epsilon]", TraditionalForm], "errors" -> {}, 
     "input" -> "\\epsilon", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9e612b44-1295-40c1-9370-cf3a3bae6eba"],
 ". Also compute the perturbation series indirectly by expanding the explicit \
exact solution in powers of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["\[Epsilon]", TraditionalForm], "errors" -> {}, 
     "input" -> "\\epsilon", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "93c2513f-8aa0-422d-992d-9d0a7e9821c8"],
 ".\n\nWe utilize the regular perturbation expansion give by ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[Tilde]", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["n", "TI"], "\[LongEqual]", "0"}], "\[Infinity]", 
          LimitsPositioning -> True], 
         SubscriptBox[
          StyleBox["y", "TI"], 
          StyleBox["n", "TI"]], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], 
         SuperscriptBox["\[Epsilon]", 
          StyleBox["n", "TI"]], ",", "\[Epsilon]", "\[Rule]", 
         SuperscriptBox["0", "+"]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "y \\sim \\sum_{n=0}^{\\infty}y_n(x)\\epsilon^n, \\epsilon \\to 0^+", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "49425380-4b2a-4e0e-9e98-8e67a97884fe"],
 ". Plugging this in for the IVP yields:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         RowBox[{"(", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["y", "TI"], "0", "\[Prime]"], "+", "\[Epsilon]", 
             SubsuperscriptBox[
              StyleBox["y", "TI"], "1", "\[Prime]"], "+", 
             SuperscriptBox["\[Epsilon]", "2"], 
             SubsuperscriptBox[
              StyleBox["y", "TI"], "2", "\[Prime]\[Prime]"], "+", "..."}], 
           ")"}], "-", 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["y", "TI"], "0"], "+", "\[Epsilon]", 
             SubscriptBox[
              StyleBox["y", "TI"], "1"], "+", 
             SuperscriptBox["\[Epsilon]", "2"], 
             SubsuperscriptBox[
              StyleBox["y", "TI"], "2", "\[Prime]\[Prime]"], "+", "..."}], 
           ")"}], "-", "\[Epsilon]", 
         StyleBox["x", "TI"], 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["y", "TI"], "0"], "+", "\[Epsilon]", 
             SubscriptBox[
              StyleBox["y", "TI"], "1"], "+", 
             SuperscriptBox["\[Epsilon]", "2"], 
             SubsuperscriptBox[
              StyleBox["y", "TI"], "2", "\[Prime]\[Prime]"], "+", "..."}], 
           ")"}], "\[LongEqual]", "0", ",", 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["y", "TI"], "0"], 
             RowBox[{"(", "0", ")"}], "+", "\[Epsilon]", 
             SubscriptBox[
              StyleBox["y", "TI"], "1"], 
             RowBox[{"(", "0", ")"}], "+", "..."}], ")"}], "\[LongEqual]", 
         "1"}], TraditionalForm], "errors" -> {}, "input" -> 
     "(y_0'+\\epsilon y_1'+ \\epsilon^2 y_2''+...) - (y_0 + \\epsilon y_1 + \
\\epsilon ^2y_2''+...) - \\epsilon x(y_0 + \\epsilon y_1 + \\epsilon \
^2y_2''+...) = 0, (y_0(0) + \\epsilon y_1(0) + ...) = 1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d6805ba1-10de-49ea-97a0-915b56965f3f"],
 ". To find the order 1 approximation, we collect terms and solve:"
}], "Text",
 CellChangeTimes->{{3.8194771895995965`*^9, 3.8194771998661075`*^9}, {
  3.89025720291038*^9, 3.8902573016117997`*^9}, {3.890257388927313*^9, 
  3.890257394895409*^9}, {3.8902582460608435`*^9, 3.8902582572725697`*^9}, {
  3.8902584571667924`*^9, 3.8902584573672976`*^9}, {3.890258538244164*^9, 
  3.8902585610081205`*^9}, {3.8902587100972548`*^9, 
  3.8902587562496777`*^9}},ExpressionUUID->"ac4970ba-4670-4dab-9885-\
453ea799808e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["y", "0"], "'"}], "[", "x", "]"}], "-", " ", 
       RowBox[{
        SubscriptBox["y", "0"], "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "0"], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], 
   ",", 
   RowBox[{
    SubscriptBox["y", "0"], "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.890258777243126*^9, 3.890258810868928*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"1e7b4981-b77a-48c7-bc73-2cc59312b8cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "0"], "[", "x", "]"}], "\[Rule]", 
    SuperscriptBox["\[ExponentialE]", "x"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8902588116707735`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"c313ad83-307e-4f42-9a66-87acd6adbc75"]
}, Open  ]],

Cell[TextData[{
 "We proceed with the ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["O", "TI"], "(", "\[Epsilon]", ")"}], TraditionalForm], 
     "errors" -> {}, "input" -> "O(\\epsilon)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "999124f5-b0fa-4751-9c3a-63c394037c04"],
 " approximation  as follows:"
}], "Text",
 CellChangeTimes->{{3.8902588252229185`*^9, 3.8902588568705363`*^9}, {
  3.890259479659772*^9, 
  3.8902594967598705`*^9}},ExpressionUUID->"4be21a6c-f707-4782-8f32-\
e791de21c33d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["y", "1"], "'"}], "[", "x", "]"}], "-", " ", 
       RowBox[{
        SubscriptBox["y", "1"], "[", "x", "]"}]}], " ", "\[Equal]", " ", 
      RowBox[{"x", "*", 
       SuperscriptBox["\[ExponentialE]", "x"]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "1"], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
   ",", 
   RowBox[{
    SubscriptBox["y", "1"], "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8902588960543003`*^9, 3.8902589346823225`*^9}, {
  3.8902601765070257`*^9, 3.890260176638529*^9}, {3.89026022697362*^9, 
  3.8902602274592648`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"cd5b8240-2840-4fd8-be43-65c2b5a6aaed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      SuperscriptBox["x", "2"]}], "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.890258935083166*^9, 3.8902601773090315`*^9, 
  3.8902602283302813`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"2c5aa828-9124-4de5-aabc-1b294ce3b1ee"]
}, Open  ]],

Cell["The true solution is given by:", "Text",
 CellChangeTimes->{{3.8902600958649373`*^9, 
  3.890260100629318*^9}},ExpressionUUID->"16cdc7c4-604a-4f0a-b481-\
b0d4984770db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
       RowBox[{"y", "[", "x", "]"}], "-", 
       RowBox[{"\[Epsilon]", "*", "x", "*", 
        RowBox[{"y", "[", "x", "]"}]}]}], "==", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "==", "1"}]}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.890259097977686*^9, 3.890259155812623*^9}, {
  3.890260152814762*^9, 3.8902601709788823`*^9}, {3.890260220273083*^9, 
  3.890260220642558*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"0ad5a95e-38cf-484b-b16e-59f8884c152e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"x", "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "2"]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8902591565768857`*^9, 3.8902601720269065`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"a48fb163-0ab5-42bf-94da-33989cb3ea67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"x", "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "2"]}]], " ", "/.", 
      RowBox[{"\[Epsilon]", "\[Rule]", "0.1"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x"], "+", " ", 
       RowBox[{"\[Epsilon]", "*", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x"], " ", 
          SuperscriptBox["x", "2"]}], "2"]}]}], "/.", 
      RowBox[{"\[Epsilon]", "\[Rule]", "0.1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "7"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<y(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8902592391262608`*^9, 3.890259394668999*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f73832c7-e930-4f28-8fa1-953d2afe4596"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$18753#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwVxXk01AkAB/BxDnI20zh+6yxHtK6tNorfN6RUSPMMkbMpxyryVrlfsfTI
SI6W2NC5Y+a37YQxJOmRJmW3Xko6ZUuiMkqYVLO7f3zexzI2eftuZRqN5v+f
/1/b+MyCRpORN9jKz7n31fFIs7+5iC4jve9/z3R+oY701FZfhp6MnKPm7yi9
U0eLd0mSjZmMNNXJkUlU6XAcc5NsXScjg147uxxYSYeFQ1VgTbqMHH/I0neu
okO1dUuu67SMZCQo7e8M18BtqeQxd3SazNZ5JjX6poluvLeIePeRtD3Q4XDh
ow7uRoXGUPc/kWdrXr2pNTVAUuSOgwktcyTP0PS3/iMMJFKthu2X5WRxe55s
4BgLhWd8m6MbFkjT8dhHIw+MoTbhOlxLfSUtvGrCHGZNoasvHvQSKUj9Kde3
riGWqH0vfmVxk4b1QW4Pt7xciugc2EwMKIETQOmxTWzREsXlRl1TRumkvs14
lT0GRGye1p8q2KxwrGYccYShMCVLcUkV5cwFj+EuF8jktnENZ9Xw5byuj3/y
SixMaRsdbVLHIdpkttW9H3Er+EqzQECHT+1GSap4LZbrafin12pgb/tChHiS
RHvKIUFpvSZMKpT0RHVeGLKuoAeVa0E18Ul5Qs4G2Obfs4uoWQTtXzlvJWZ+
WLft+cr6Wm2wdu4rq/Hzx0hKgSevRAfdoVRO/9g2tLrt0Ll+XBe/DIrMU6+y
Ycy5Mfx7gR5Ui+I1Jh9wYLn/0KYYd32I2Vn3hCFhCFjUos7o1AfNic0OvxYJ
r79bekxWGSA4+VKQwfUYBMZt3bVRYgDHvHr9z1IuPNv85nXdFqPh2gdPK894
fHJmlqwQLYbWhe3HXi38hN7cNOXkHxgY4j8WqOxIQfjsmYN0ioE+K8W05utU
DFqvGXVfxkRb4M3+uf407Fm+y6niHBPKwy5jz/dm4ConPGu92RI8+LlvjhOR
A5fQCT6zcQm0757kNdsdRmK+75AHwUJ9QIAL92E+CvdofFaqYKH36ZrdoaOF
uGwao5hgGkJSuup0Xksx2r4VqtiXGmLfZpbMeagUt5u9J3gGRjC/6e6aolaO
Hos9fSXlRqicsQ1OUFQiry248YWWMdrcKPm21dUIs3oSGc4zRnnkoL0/6iAX
OxEOdBN48TeQosAGZKq8uV2VawLvnoxbyTdOg7nMLcaaRoCTt70zduQc0vZx
ZrQyCFj/kxh9dQ0fJqu5UpssAqtPsTjSTXx0fd1f55VDIFt6J+5xKB8aPJ5P
5mECMV/E8+YZfNQJeivfFBH44MHMW9rBR++46yrpSQKJ3wX9ZezZBMYuvQMF
nQQkanZymb8AEnvTzY1dBKohl/tFCbDzg73ZlW4CnmMXx6kUAc4f9u2b6SWw
rpoQnKgQwL0hh8UdIGCf/iX/7bAAsU8nxV7PCLgviqq8GC8E/Zy8OHKEwDw9
92JHphDCJHpU5iiBMusm27slQswuWNEvjRFwpR3dYiESotgkLMRyigBrSmf5
ps9COI3GOXhME/i2jDXzhzaFQX6aIvQjgVMF0cGW5hTM3I5fKJsjsLW0ac7O
h0IPrT5LKCeQJF2xsYtDIV4qDJQuEHjBmfWLSqCgXdax9OVXAvFX2HTtbAqi
EOmcQkGgW/lEYW8phX8BICgiCA==
          "]]}, Annotation[#, "Charting`Private`Tag$18753#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1.0000000000000022`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"y(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {1., 0}, DisplayFunction :> Identity,
      Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 7}, {0., 3792.4377969064435`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8902593456219826`*^9, 3.890259395348643*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"f39be9f8-7f00-4042-8a7a-e5df74f45a6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"x", "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "2"]}]], " ", "/.", 
      RowBox[{"\[Epsilon]", "\[Rule]", "0.01"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x"], "+", " ", 
       RowBox[{"\[Epsilon]", "*", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "x"], " ", 
          SuperscriptBox["x", "2"]}], "2"]}]}], "/.", 
      RowBox[{"\[Epsilon]", "\[Rule]", "0.01"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "7"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<y(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.890259403194443*^9, 3.89025940890818*^9}, {
  3.8902617584337797`*^9, 3.8902617603385663`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"881d50dd-d752-41a2-94f7-0930e77ba3e4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwVxX041AcAB/CTuEs4Ii/3ezKuDiFGsu56+X2TrEhS8x7ncnl7PPOWiCjd
wyJn6fzWioZkLU4b511SUbvCejzVTNbLVC5s3PVCl3Tb/vg8H5v9SXsOLKLR
aH7/+f8N1U+saTQl2fOkIur1Ix08WnJXVkhXkpdqY1RhL3WQmdribcJUkkf2
1ojkMzpo3lqcaGulJIm1Lq1Ni3XhPM5t37lRSZ7IeXWm11kX1o6U/9lMJWlW
Jj44ItLF4hbfXDeVkrTq+I2ucKVjQN4+KhxTkdLLzEDLHxi4jmnriH/ekL42
bRNO2voY4ocIGh6+Iwc+uzLbWc5EYmRoRnzzHJlmX3TVoN8YCQ0t5h1dapIS
3PKf2GiKghpvWVTVPBkwcGGd230z6Ey6jZQ3LJB8Naml0GLB0Kj1gWejhkz3
iGdGla5A+XTrS+s7NMz7Szqz6qwRlQPbyUEtEKNBB7nzbDTzhUL+jUV4/uFj
bU4SB4ONe8V6v2jjXlz8fbqdPcylydmapsW4wbuk+0euI5Rqu9iqizqI8Ps7
Q3+JC+Zn9C1O1unCvi9gzbEmV/QHdsvq6+kYXM4Req10x2omwy+znAFF30OZ
Q7sHOpKP1ZdULgH/yjeD1uNcDHMk9IDTenAKFQYkbtsEO9F9+4izS7FPlaIt
bwU27n7qXlmuj8LwbSeFS7fiWXL+ZnGxAU6oew8XibahhRtqcKvUEKLRBIPh
ku2wDPp15Kd8JiaOdBt03vWFTcqx7QKeEabYu13dBf7YtbRZ1+SqEX73YMz1
jwfA815zL2udMeZr30c2kl/BP3Zn9JftxvCqSVlw4gRjc9uO94bcZQjVT9vh
cyAM7z43LXZqXIYmBTMjfzgCfbnpi5LWmqCn+cYWtr4A4bM1GfQGE6yUZg4N
7YrGA876Md4qU7isn37qM3QAMaujXSS1ptAoXOJ5k3HoCQrP3mK1HKyO7674
uCfCNWTysmn1cjgRH2M2sJORIPIe3kSYIWvNwlvazlQUxDA+aEnMcOhQ4MV6
2UF0rRBoJk3NIQ1OG90szUDbpwJthxJzPOXXOXs9zMKAbOuk2NgCI1PvVWe6
c9FrHXO7+LQFtkfVhuwrzcPxtsDqv/Qs4dszs9tOIUIY+8/IcLElLE5U3oy4
WwB1qwvhSGdB6c2onH1ciCztiQEqlwVGXE4A10cM01VcAYdGgNU1nDB98xTS
vw56q3eYQIqowqhKWwKWh1Bum03AGefTQg0luLaQUuGZQ+DZbJXSwlIChljs
lZVHgHe+2bvOWYKK+r6yiUICy76lbpmFSdD3ym2d/BwBFZu3mtUkgUk081D+
VQJ+TcMDz2PK0O6wwqf6GgEDo+6o2NQy7HvtYNV9nYD4guy4KqcMP+Z5337b
R+Ba/oujllQZeFU5ZsJBAkeTcKe9twz7H0+1ej4hEGKUOv0FmwK9Vl0U+YyA
hv/I0daZgjSRzs8aIxD3WuJO8CjMzrPpTeME8pTft1nuoVDECgu2mSGgU9ml
ijtOwWUs1nGTisCn00lz4hIKDy6na0LeEPgwO6XoOEfBilt66dQcgbVMzllb
GYVeWmW2VE2gV2dUENtDIU4u9ZfPE2h548v5uZ+C/qnOlS8WCCR7ZikWhik0
BsvnNBoC6oYE6d4XFP4FCYolAg==
          "]]}, Annotation[#, "Charting`Private`Tag$21048#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwVyXk4lAkAx/EJY9zjvt7YyUY5clbbuN7fEpIsbeUa1+ToUiSWxmOWtU2X
IXPsPlFrPJGEasI4irWZNCs6bT3dsdVuNhk1mpXKtn98n88f30Wbs7/N0KBQ
KJGf+1+/uscMCkVJ3unlHHh6n4r7ukNtB2lK8lWD/tSa51QU5naEmtGVZPzx
CzGyKSrag8uznOyVZC3b00eipQ33F8yudf5KUl3UkX7OXRsMV3HU0UIl2Tue
dENepg2tjgiu97SSnNQN97vuRcOwoutB+vg0mRe/Y272uA768ZqRNPmW3M2f
mJvRMMDNlDh26x8z5DbBKxm7ho6s5PiCbe1qsnBjNlUxZILtrR1W3RdmyQe5
1zYW+ZuDdyK0LVUyR85b9jbyb1mCOuF9r6b1I6naH9gySbGFkbFsNEg6T/rV
L9RVVtqh5rXsOeN3CsJ7Q9T5TQykFsNpYmQBmBcdmJdmHdCekp6e8psGJG59
Q3k7HTEi3cDXO6cJOef5z1i8FFYtOUXz57WQbz16+QPHFcrZJVsk9VR4NZSu
faDpgbkpA+vDp7XRHzsgenPGC1c39bY1N9OgPp0TVWi/HM50ncjCGh1orXOM
eChdie6ckuaKWl1MOcf/df4RE3cdhbT1Aj0sC2NZZ/sGYEnZ7aVJR/UxxrIY
/P4s4B/9ZHltjQFssnIP3F0QjKc5+wL55YYg7Qr4EQUh6GDGG16uMoLlkAV9
jLsGNjFX7p3aR8c1XjItWRaBRbtL1rB9jXHzTntjblgUvtFv1za7aAwJq1Lt
f2c9gq63D9iuMEHVLaHZbZeNiNqyLi2sywTnOAHpe/RiEdgZ/q8R0xRCcaxq
Q3ACZjzNy92kpgh3X9bl0poEOTdfI9vHDA75HOfI6VSw3p0ooLWaodN0SJK9
LA2jjqvGfReb44uF5T60UxnIdE7zEDaYg37DTbZdthW/xrCKvra3QJ6ct5Ol
2gGvuIkm8zoLTEbHd8WosrG9LPRuAGGJykFuyAnbXPAydd4vEFrCv+InR++C
PFywY89PmFtB/+QngsouQOcnnqZLhRXcsvev8tnLwXBb8ATfxBoSC/du7wgu
BhiZg+UCa7TwHodK15bih85NdWN6NrjEvefqU1WGBIeHySy+DSghI2mBqTzM
yjwIV5otVmgz9igTD4Kj+XJYzLWFXk/Qe6cz5TBfzGQ7UggMR9ccZqQdQf6u
GJXeXgJVwrNm/ZUC2K5MVzgVEVD1ZHhaVQvQ93H3saBiAsVLMy3z6gXQ4fNX
c0oJDCwPiyC7BTjWLBe9PEhAmvi+jfhTAPnf3isU1QSudMo2T30lhFka/bt9
FwkM/pJWb/NCiC4Xu7V1fQRS33omeE4LkfjGxb63n8DJR89WR34Q4mRp6KBK
ToCWoho8aiqCr6TYMn2EQE/P1SfFpAibH/0jC3pMoLGvqSi/WgRaw+yh5KcE
+k5VOE03iNCSRUvhjBNwMzIm90hFeDfnQDv/goC1YeKVQwoRDtkmxC6aIjAW
3VFNU4vgMb7FNWCaQG2ygXWnhhijTfnzcW8JsCoWMnYaiWHPrGo8oibwo8zu
yStHMQYotUUtswTiKnYdl3mJsVXREqWYIxAVvmqGFyCGwZGeL599JJCh5zmR
FC6GNFahnp///PUNS/w2ifEfkKwamA==
          "]]}, Annotation[#, "Charting`Private`Tag$21048#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1.0000000000000022`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"y(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {1., 0}, DisplayFunction :> Identity,
      Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 7}, {0., 1401.0817124050793`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.890259409583612*^9, 3.8902617609556637`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"2ee7c121-1be1-42d5-a81b-1eacf5a65963"]
}, Open  ]],

Cell[TextData[{
 "Hence, we see as we refine ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["\[Epsilon]", TraditionalForm], "errors" -> {}, 
     "input" -> "\\epsilon", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a819834d-0c5b-49db-b2de-841ef79d46a7"],
 ", we approach the true solution. Computing the next order term shows:"
}], "Text",
 CellChangeTimes->{{3.8902595037874036`*^9, 3.8902595204595404`*^9}, {
  3.890260028759638*^9, 
  3.8902600433341975`*^9}},ExpressionUUID->"19a21905-92f0-41be-b109-\
8ef83c81cfb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["y", "2"], "'"}], "[", "x", "]"}], "-", " ", 
       RowBox[{
        SubscriptBox["y", "2"], "[", "x", "]"}]}], " ", "\[Equal]", " ", 
      RowBox[{"x", "*", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "x"], " ", 
         SuperscriptBox["x", "2"]}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "2"], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
   ",", 
   RowBox[{
    SubscriptBox["y", "2"], "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8902601285055447`*^9, 3.8902601407662106`*^9}, {
  3.8902602412608943`*^9, 3.890260272848155*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"7d9d11d1-0bcb-484d-a49b-d91b91f28f9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "2"], "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      SuperscriptBox["x", "4"]}], "8"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8902602634639306`*^9, 3.8902602739428096`*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"3c7e8ccf-966a-4ebe-beec-b6252a3ed197"]
}, Open  ]],

Cell[TextData[{
 "Thus, we see that our series will be of form ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[Tilde]", 
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
            StyleBox["n", "TI"], "\[LongEqual]", "0"}], "\[Infinity]", 
          LimitsPositioning -> True], 
         SubscriptBox[
          StyleBox["a", "TI"], 
          StyleBox["n", "TI"]], 
         SuperscriptBox["\[Epsilon]", 
          StyleBox["n", "TI"]], 
         SuperscriptBox[
          StyleBox["x", "TI"], 
          RowBox[{"2", 
            StyleBox["n", "TI"]}]], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          StyleBox["x", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "y \\sim \\sum_{n=0}^{\\infty}a_n\\epsilon^nx^{2n}e^x", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "49e61987-3230-43e4-98d3-9ab933b108e7"],
 ". By inspection, this series passes the ratio test, given that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{"0", "<", "\[Epsilon]", "<", "1"}], TraditionalForm], 
      "errors" -> {}, "input" -> "0 < \\epsilon < 1", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], ".", " "}], TraditionalForm]],ExpressionUUID->
  "bf7fb9f8-0f3f-41df-b507-56f610bbe387"],
 " Finally, we expand this as:"
}], "Text",
 CellChangeTimes->{{3.8902602778615513`*^9, 3.890260288355912*^9}, {
  3.890260373564971*^9, 3.890260404344037*^9}, {3.890260441239959*^9, 
  3.8902604461140347`*^9}},ExpressionUUID->"47599eff-e0af-445b-9b17-\
3cd852b01e69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"x", "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "2"]}]], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.890260455066946*^9, 3.890260507798338*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"591c8814-c2fb-420e-8707-231cfd4a2467"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", "x"], " ", 
    SuperscriptBox["x", "2"], " ", "\[Epsilon]"}], "+", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    SuperscriptBox["\[ExponentialE]", "x"], " ", 
    SuperscriptBox["x", "4"], " ", 
    SuperscriptBox["\[Epsilon]", "2"]}], "+", 
   RowBox[{
    FractionBox["1", "48"], " ", 
    SuperscriptBox["\[ExponentialE]", "x"], " ", 
    SuperscriptBox["x", "6"], " ", 
    SuperscriptBox["\[Epsilon]", "3"]}], "+", 
   RowBox[{
    FractionBox["1", "384"], " ", 
    SuperscriptBox["\[ExponentialE]", "x"], " ", 
    SuperscriptBox["x", "8"], " ", 
    SuperscriptBox["\[Epsilon]", "4"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "5"],
    SeriesData[PresenterTools`Private`\[Epsilon], 0, {}, 0, 5, 1],
    Editable->False]}],
  SeriesData[
  PresenterTools`Private`\[Epsilon], 0, {
   E^$CellContext`x, Rational[1, 2] E^$CellContext`x $CellContext`x^2, 
    Rational[1, 8] E^$CellContext`x $CellContext`x^4, Rational[1, 48] 
    E^$CellContext`x $CellContext`x^6, Rational[1, 384] 
    E^$CellContext`x $CellContext`x^8}, 0, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.890260508045285*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"8ed3860f-0037-4797-8700-534d4855d94c"]
}, Open  ]],

Cell["\<\
We see that this matches the terms that we computed, hence validates our \
approximation.\
\>", "Text",
 CellChangeTimes->{{3.8902605113226223`*^9, 
  3.89026052413817*^9}},ExpressionUUID->"29602888-c96d-445d-b6b2-\
9f07ec6bfdbd"],

Cell[BoxData[""], "Input",ExpressionUUID->"8f099f28-bfcf-48c0-9c13-c009009c0615"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 3", "Section",
 CellChangeTimes->{{3.8194772128885565`*^9, 
  3.819477213817498*^9}},ExpressionUUID->"53360077-b126-4736-89d5-\
442e353af9f0"],

Cell[TextData[{
 "Show that the solution to the IVP ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]\[Prime]"], "+", 
         StyleBox["y", "TI"], "+", "\[Epsilon]", 
         StyleBox["y", "TI"], "\[LongEqual]", "0", ",", 
         StyleBox["y", "TI"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", "1", ",", 
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "y'' + y + \\epsilon y = 0, y(0) = 1, y'(0) = 0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8fbb4aae-fbbc-424e-ab4e-d08de1500a33"],
 ", remains bounded for all real ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["x", "TI"], TraditionalForm], "errors" -> {}, "input" -> "x", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d701fc5e-5311-4c07-9290-13bc450e1824"],
 ". Obtain a first-order perturbative approximation to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "(", 
         StyleBox["x", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "y(x)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d8ee3ac2-34a8-47e6-b629-11c4ee72355b"],
 " and show that it is unbounded as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "293d0681-8f96-4d02-b00f-12fab2ee244c"],
 ". Conclude that the first order approximation is valid only for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"|", 
         StyleBox["x", "TI"], "|", "<", 
         StyleBox["O", "TI"], 
         RowBox[{"(", 
           SuperscriptBox["\[Epsilon]", "-1"], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "|x| < O(\\epsilon^{-1})", "state" -> "TeX"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d51826c7-f517-4c12-8990-5533f1f3675e"],
 ".\n\nWe proceed the same as the previous problem:"
}], "Text",
 CellChangeTimes->{{3.819477217465713*^9, 3.8194772281844006`*^9}, {
  3.8902605911645136`*^9, 3.8902606008189707`*^9}, {3.890260643574492*^9, 
  3.8902607056404533`*^9}, {3.8902612231648817`*^9, 
  3.890261232380678*^9}},ExpressionUUID->"fd8fe25a-0bda-453f-93cc-\
c04259d41a4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["y", "0"], "''"}], "[", "x", "]"}], "+", " ", 
       RowBox[{
        SubscriptBox["y", "0"], "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "0"], "[", "0", "]"}], "\[Equal]", "1"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["y", "0"], "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
    "}"}], ",", 
   RowBox[{
    SubscriptBox["y", "0"], "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.890261327842931*^9, 3.8902613565537624`*^9}, {
  3.89026139848441*^9, 3.890261445333065*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"4bd9f210-323d-4a4f-b43a-b1de8b814ba5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "0"], "[", "x", "]"}], "\[Rule]", 
    RowBox[{"Cos", "[", "x", "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8902614092627354`*^9, 3.8902614457653217`*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"3637c441-a2a3-479c-a312-5bf01b2c8a9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["y", "1"], "''"}], "[", "x", "]"}], "+", " ", 
       RowBox[{
        SubscriptBox["y", "1"], "[", "x", "]"}]}], " ", "\[Equal]", " ", 
      RowBox[{"-", 
       RowBox[{"Cos", "[", "x", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "1"], "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["y", "1"], "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
    "}"}], ",", 
   RowBox[{
    SubscriptBox["y", "1"], "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.890261483654333*^9, 3.890261535280136*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"0a47456d-24cc-4094-918c-f61c99e9ddda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "x", "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "3"]}], "-", 
       RowBox[{"2", " ", "x", " ", 
        RowBox[{"Sin", "[", "x", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8902615401388087`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"8170cd47-fda4-4132-ab5e-b151e700fe70"]
}, Open  ]],

Cell["The true solution is given by:", "Text",
 CellChangeTimes->{{3.8902615546707506`*^9, 
  3.890261562558037*^9}},ExpressionUUID->"214f9a1e-3abb-4bbf-8f42-\
d3410acb9e03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
       RowBox[{"y", "[", "x", "]"}], "+", 
       RowBox[{"\[Epsilon]", "*", 
        RowBox[{"y", "[", "x", "]"}]}]}], "==", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "==", "1"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.890261583783941*^9, 3.8902616072709565`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"33d0a944-7af0-49b8-af43-329e077e7292"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "x"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1"}], "-", "\[Epsilon]"}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "x", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "-", "\[Epsilon]"}]]}]]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8902616080573425`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"72af237d-e6f5-462e-a00a-588cc62a0cc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "x"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "-", "\[Epsilon]"}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "-", "\[Epsilon]"}]]}]]}], ")"}]}], " ", "/.", 
      RowBox[{"\[Epsilon]", "\[Rule]", "0.1"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], " ", "+", " ", 
       RowBox[{"\[Epsilon]", " ", "*", "  ", 
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "x", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "x", "]"}], "3"]}], "-", 
          RowBox[{"2", " ", "x", " ", 
           RowBox[{"Sin", "[", "x", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "x", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]}], "/.", 
      RowBox[{"\[Epsilon]", "\[Rule]", "0.1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "40"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<y(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.890261623360213*^9, 3.890261691670288*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"906829fe-1d93-4ce2-9e53-737646486195"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$20382#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
ofvxzicdJIv9f2t8BaQ=
          "]]}, Annotation[#, "Charting`Private`Tag$20382#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1.0000000000000022`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"y(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {1., 0}, DisplayFunction :> Identity,
      Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 40}, {-2.2247064821950544`, 2.0870820695848926`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8902616783215036`*^9, 3.8902616923370733`*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"4799de4b-a639-4c6f-a924-612cdf111e67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "x"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "-", "\[Epsilon]"}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "-", "\[Epsilon]"}]]}]]}], ")"}]}], " ", "/.", 
      RowBox[{"\[Epsilon]", "\[Rule]", "0.01"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], " ", "+", " ", 
       RowBox[{"\[Epsilon]", " ", "*", "  ", 
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "x", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "x", "]"}], "3"]}], "-", 
          RowBox[{"2", " ", "x", " ", 
           RowBox[{"Sin", "[", "x", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "x", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]}], "/.", 
      RowBox[{"\[Epsilon]", "\[Rule]", "0.01"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "40"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Solid", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<y(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", " ", "\"\<approximate\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.890261700573004*^9, 3.8902617421828833`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"7d63c643-f572-4ee4-aee8-b7a05a73779c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
npkh/u+pX9B9dxj/HwOY0b0=
          "]]}, Annotation[#, "Charting`Private`Tag$20953#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
tfy2hD1KbPJ/eTMljw==
          "]]}, Annotation[#, "Charting`Private`Tag$20953#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1.0000000000000022`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox[
         StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"y(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
        TraditionalForm]}, AxesOrigin -> {1., 0}, DisplayFunction :> Identity,
      Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1, 40}, {-1.0146663673402905`, 1.017433414964284}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"exact\"", "\"approximate\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.09]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8902617085281897`*^9, 3.8902617431164*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"82a3fa7e-83d6-4c3b-9569-4214a12189a2"]
}, Open  ]],

Cell[TextData[{
 "To demonstrate the unboundedness of the first order approximation, we see \
that as we take ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "x \\to \\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e067cd87-afeb-438a-813e-174847d70979"],
 ":"
}], "Text",
 CellChangeTimes->{{3.890261778156376*^9, 
  3.890261825569533*^9}},ExpressionUUID->"fea2a037-a71d-4f07-a329-\
c36f8fd39f04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", "+", " ", 
     RowBox[{"\[Epsilon]", " ", "*", "  ", 
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "x", "]"}], "3"]}], "-", 
        RowBox[{"2", " ", "x", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]}], "/.", 
    RowBox[{"\[Epsilon]", "\[Rule]", "0.1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "200"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", 
      RowBox[{"Solid", ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<x\>\"", ",", "Italic", ",", "18"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<y(x)\>\"", ",", " ", "Italic", ",", " ", "18"}], "]"}]}], 
     "}"}]}], ",", " ", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8902618345067773`*^9, 3.890261902171747*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"204b5ccf-4419-4c33-b305-d5aa7ac5b8bd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.01], Opacity[1.], 
      LineBox[CompressedData["
1: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
5nHJOQno6dpncz+AARdqnrs0mItByq/ZBxGnsHr9Woe7FCIACzz/HTILZ4Bs
a/czfxgnOV9STV0fgeXTVuVi8uIHKV9yslouigHtrdJHehgNJJZSutZkNANU
rGpFymf6uQ3bRn/kJjAg8sWkPTB4kfarSnxaEna/Absg6KgAioDr1pdSGNCR
/7rbjiGMDPeR7rFTGfDJfGqgTlwSJbbh2w7cYMDoY8cPyq+l0ZDbEB+kYf12
dqqhRFsW3fZKYalkMKBBlzT1OAaPZkcOXRG7wwDC642KZnewfTbQ/O2/LAY4
PhhRrsmWQ7nzUpOD2QxQW99oSb4ijwQjfqz5dB/rh4bdVuK+CoghVHag6iED
7Ph81GUMiOhVfHxk0SMGrDtxcfRRHxER8MyiO7kMcAmUitkcrIj80oy+J+Qx
QCnef5v4P0VUqy4mG5aP1cd5fGMNXQlpPuwF70Ks3l+1lWbylVCYbok/pRjT
l5AHkXY/lVBH8aUsm1IGiOlThZL5lJG+mXuz4XMGBM55PbkrpIziuPo8a8sw
+4v+7KkJJTSwW1Bf9hXWX34RS6pVSoj04Qt99TUDDmbedX8TqoRuOeUnjZYz
IFs+Wj1JWQlNd0Zxu7kMeBS6cGE4WxE50MljdZVYvZv0XpnhFNGjn5vUy6oY
MPYj/8zKUSLi8+HZ/7CGAVPfLW835yog98n28GvvMb1K5b/o8Qnbv4Mf50fV
McDir9nVw8NySGb1bK9/A1bvsUBWzTABeUc7SdEbGSAoeFWW+RmPqsXXW+z7
yICs5BOHTYpwKITYnKHTxoD9LopjvfoyqD3zfqPCJ0xfDtJ5l4skkd66kGXB
zwzw2V9ZOPhTDPVv1fTo72LAzXt31+nyCyLjkybpCz0MYPsqlBzI50Vxz+2/
4L4xYDjvA80vbolrsP20i/UPBnzweKonLDfKPb/rw777fxiQubxVNlduhNR5
8fvlN6NYvfa2bE5cM0PSrZutax9jgK5cc85bzSVS+741NoLTmP4ly3X86ReA
DcnGF1RnMX22Nyly1hWBsFa7t0b/GFCx4V3xNE0ctMinLLyWMH5dTbnxt0AG
gtMuh4WvMMDya8qzN/I4+NCd9eo6DxMGxdy6l4/iQUPt+b98PiZsr2mxNX1E
gJOMBuP3AkzwqnnBJ9osB7XZfSe/CTHhOjXIc12fPKj8nCmeE2FC0susQHdM
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
       "]]},
     Annotation[#, "Charting`Private`Tag$21470#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      StyleBox["\"x\"", Italic, 18, StripOnInput -> False], HoldForm], 
     TraditionalForm], 
    FormBox[
     TagBox[
      StyleBox["\"y(x)\"", Italic, 18, StripOnInput -> False], HoldForm], 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 200}, {-9.873160995698854, 10.02948419864101}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontSize -> 14]]], "Output",
 CellChangeTimes->{{3.8902618754639254`*^9, 3.890261902673013*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"29ddebef-d844-409c-bcde-4df719bf5853"]
}, Open  ]],

Cell[TextData[{
 "Observing the magnitude of our solution and using the triangle inequality \
alongside the fact that both cosine and sine are bounded shows:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"|", 
         StyleBox["y", "TI"], "|", "\[LongEqual]", "|", "cos", 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "+", "\[Epsilon]", "*", 
         FractionBox["1", "4"], 
         RowBox[{"(", 
           RowBox[{"2", "cos", 
             RowBox[{"(", 
               StyleBox["x", "TI"], ")"}], "-", "2", "cos", 
             SuperscriptBox[
              RowBox[{"(", 
                StyleBox["x", "TI"], ")"}], "3"], "-", "2", 
             StyleBox["x", "TI"], "sin", 
             RowBox[{"(", 
               StyleBox["x", "TI"], ")"}], "-", "sin", 
             RowBox[{"(", 
               StyleBox["x", "TI"], ")"}], "sin", 
             RowBox[{"(", 
               RowBox[{"2", 
                 StyleBox["x", "TI"]}], ")"}], "+", 
             StyleBox["O", "TI"], 
             RowBox[{"(", 
               SuperscriptBox["\[Epsilon]", "2"], ")"}], "|", "\[LessEqual]", 
             "|", "cos", 
             RowBox[{"(", 
               StyleBox["x", "TI"], ")"}], "|", "+", "|", "\[Epsilon]", "*", 
             FractionBox["1", "4"], "||2", "cos", 
             RowBox[{"(", 
               StyleBox["x", "TI"], ")"}], "-", "2", "cos", 
             SuperscriptBox[
              RowBox[{"(", 
                StyleBox["x", "TI"], ")"}], "3"], "-", "2", 
             StyleBox["x", "TI"], "sin", 
             RowBox[{"(", 
               StyleBox["x", "TI"], ")"}], "-", "sin", 
             RowBox[{"(", 
               StyleBox["x", "TI"], ")"}], "sin", 
             RowBox[{"(", 
               RowBox[{"2", 
                 StyleBox["x", "TI"]}], ")"}], "+", 
             StyleBox["O", "TI"], 
             RowBox[{"(", 
               SuperscriptBox["\[Epsilon]", "2"], ")"}], "|", "\[LessEqual]", 
             "1", "+", "|", "\[Epsilon]", "*", 
             FractionBox["1", "4"], 
             RowBox[{"(", 
               RowBox[{"-2|", 
                 StyleBox["x", "TI"], "|", "-", "1"}], ")"}], "|", "+", "|", 
             StyleBox["O", "TI"], 
             RowBox[{"(", 
               SuperscriptBox["\[Epsilon]", "2"], ")"}], "|."}]}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "|y| = |\\cos(x) + \\epsilon * \\frac{1}{4}(2\\cos(x) \
-2\\cos(x)^3-2x\\sin(x)-\\sin(x)\\sin(2x) + O(\\epsilon^2)| \\leq |\\cos(x)| \
+|\\epsilon * \\frac{1}{4}| |2\\cos(x) \
-2\\cos(x)^3-2x\\sin(x)-\\sin(x)\\sin(2x) + O(\\epsilon^2)| \\leq 1 + \
|\\epsilon * \\frac{1}{4} (- 2|x| - 1)| + |O(\\epsilon^2)|.", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b98fbf70-b29b-4fab-be92-7f615dc23c42"],
 "\nHere, we see that there is an ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Epsilon]", "|", 
         StyleBox["x", "TI"], "|"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\epsilon|x|", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cfa581e6-63b3-4e33-aff4-78a38d6e9e69"],
 " term, hence for boundedness ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"|", 
         StyleBox["x", "TI"], "|", "<", 
         StyleBox["O", "TI"], 
         RowBox[{"(", 
           SuperscriptBox["\[Epsilon]", "-1"], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "|x| < O(\\epsilon^{-1})", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3a1f68a5-9289-4576-8fea-c15b08d03f05"]
}], "Text",
 CellChangeTimes->{{3.8902620405584955`*^9, 3.8902620536646414`*^9}, {
  3.8902625522469983`*^9, 3.890262590996845*^9}, {3.8902627353747225`*^9, 
  3.890262752651574*^9}},ExpressionUUID->"6f4f01aa-4b22-462a-b964-\
f43208a0e791"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{760.5, 735.75},
WindowMargins->{{160.5, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 27, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d75e67b7-b5ca-4e2d-9fea-0daa88af3a50"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 218, 4, 98, "Title",ExpressionUUID->"197654a4-4d8f-4ad2-acd2-0426bba106a8"],
Cell[801, 28, 207, 4, 31, "Author",ExpressionUUID->"47fdc244-5ee2-4b42-93c3-40f677fdf9ef"],
Cell[1011, 34, 214, 4, 31, "Affiliation",ExpressionUUID->"581392a7-3011-4211-898e-5aefcdf8effb"],
Cell[CellGroupData[{
Cell[1250, 42, 158, 3, 67, "Section",ExpressionUUID->"3b0f5f64-fd7d-4b7d-9281-4b7c9c73d5a2"],
Cell[1411, 47, 3052, 74, 134, "Text",ExpressionUUID->"d8fb54c8-1da0-4208-b74e-3f8dbdd27abd"],
Cell[CellGroupData[{
Cell[4488, 125, 981, 28, 53, "Input",ExpressionUUID->"4e16bd12-e926-4a45-8468-c0190b309b1b"],
Cell[5472, 155, 279, 6, 32, "Output",ExpressionUUID->"4a311b97-535f-4697-903c-b3ac04df915c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5788, 166, 413, 11, 28, "Input",ExpressionUUID->"281ad3ab-ef89-4119-8e78-eb3be7e2a73f"],
Cell[6204, 179, 386, 11, 32, "Output",ExpressionUUID->"1f2835da-e21b-4e88-844c-61fa4a107a76"]
}, Open  ]],
Cell[6605, 193, 199, 3, 35, "Text",ExpressionUUID->"77706497-7aaf-437d-8e3f-713ea0c7b364"],
Cell[CellGroupData[{
Cell[6829, 200, 1161, 32, 53, "Input",ExpressionUUID->"03493545-ed4b-44da-b25b-0792d01b6dcd"],
Cell[7993, 234, 226, 4, 32, "Output",ExpressionUUID->"db6b2749-8cb1-47a9-baa2-59beb40a61e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8256, 243, 1260, 36, 53, "Input",ExpressionUUID->"79e4b9ba-5b2c-4c6f-ac74-abdf9c8ccbaa"],
Cell[9519, 281, 225, 4, 32, "Output",ExpressionUUID->"7ac79119-ead9-4c4d-8787-9ea10608ad69"]
}, Open  ]],
Cell[9759, 288, 776, 20, 37, "Text",ExpressionUUID->"7b3bfad7-82fc-4c58-a913-1fad25edeb35"],
Cell[10538, 310, 187, 3, 35, "Text",ExpressionUUID->"9cef7e80-acbe-4c33-a2db-94f751f75d84"],
Cell[CellGroupData[{
Cell[10750, 317, 1127, 32, 53, "Input",ExpressionUUID->"2d93a13e-4291-40b1-bc1e-ad447a6c83cc"],
Cell[11880, 351, 197, 4, 32, "Output",ExpressionUUID->"1e5215ac-b326-4af7-bc09-607d9cf52617"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12114, 360, 1264, 37, 53, "Input",ExpressionUUID->"642a9572-c86c-4bd3-a130-d92736a2dc09"],
Cell[13381, 399, 198, 4, 32, "Output",ExpressionUUID->"df9b507a-1813-4389-8446-7ec71a61c57e"]
}, Open  ]],
Cell[13594, 406, 794, 21, 37, "Text",ExpressionUUID->"c88b7d0f-89c0-4340-a3b7-de406558cbcc"],
Cell[14391, 429, 169, 3, 35, "Text",ExpressionUUID->"5069ba28-e1d1-49a1-8d12-1d853058007c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14597, 437, 156, 3, 67, "Section",ExpressionUUID->"3f070b75-5760-46e2-8dfd-1b5d3e237d45"],
Cell[14756, 442, 4943, 116, 226, "Text",ExpressionUUID->"ac4970ba-4670-4dab-9885-453ea799808e"],
Cell[CellGroupData[{
Cell[19724, 562, 647, 19, 28, "Input",ExpressionUUID->"1e7b4981-b77a-48c7-bc73-2cc59312b8cc"],
Cell[20374, 583, 321, 8, 35, "Output",ExpressionUUID->"c313ad83-307e-4f42-9a66-87acd6adbc75"]
}, Open  ]],
Cell[20710, 594, 595, 15, 37, "Text",ExpressionUUID->"4be21a6c-f707-4782-8f32-e791de21c33d"],
Cell[CellGroupData[{
Cell[21330, 613, 832, 23, 31, "Input",ExpressionUUID->"cd5b8240-2840-4fd8-be43-65c2b5a6aaed"],
Cell[22165, 638, 449, 12, 50, "Output",ExpressionUUID->"2c5aa828-9124-4de5-aabc-1b294ce3b1ee"]
}, Open  ]],
Cell[22629, 653, 174, 3, 35, "Text",ExpressionUUID->"16cdc7c4-604a-4f0a-b481-b0d4984770db"],
Cell[CellGroupData[{
Cell[22828, 660, 714, 18, 28, "Input",ExpressionUUID->"0ad5a95e-38cf-484b-b16e-59f8884c152e"],
Cell[23545, 680, 441, 12, 49, "Output",ExpressionUUID->"a48fb163-0ab5-42bf-94da-33989cb3ea67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24023, 697, 1801, 48, 115, "Input",ExpressionUUID->"f73832c7-e930-4f28-8fa1-953d2afe4596"],
Cell[25827, 747, 14673, 299, 250, "Output",ExpressionUUID->"f39be9f8-7f00-4042-8a7a-e5df74f45a6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40537, 1051, 1853, 49, 115, "Input",ExpressionUUID->"881d50dd-d752-41a2-94f7-0930e77ba3e4"],
Cell[42393, 1102, 12211, 259, 250, "Output",ExpressionUUID->"2ee7c121-1be1-42d5-a81b-1eacf5a65963"]
}, Open  ]],
Cell[54619, 1364, 587, 14, 37, "Text",ExpressionUUID->"19a21905-92f0-41be-b109-8ef83c81cfb1"],
Cell[CellGroupData[{
Cell[55231, 1382, 870, 25, 47, "Input",ExpressionUUID->"7d9d11d1-0bcb-484d-a49b-d91b91f28f9f"],
Cell[56104, 1409, 426, 11, 50, "Output",ExpressionUUID->"3c7e8ccf-966a-4ebe-beec-b6252a3ed197"]
}, Open  ]],
Cell[56545, 1423, 1647, 41, 84, "Text",ExpressionUUID->"47599eff-e0af-445b-9b17-3cd852b01e69"],
Cell[CellGroupData[{
Cell[58217, 1468, 453, 11, 45, "Input",ExpressionUUID->"591c8814-c2fb-420e-8707-231cfd4a2467"],
Cell[58673, 1481, 1423, 36, 48, "Output",ExpressionUUID->"8ed3860f-0037-4797-8700-534d4855d94c"]
}, Open  ]],
Cell[60111, 1520, 240, 6, 35, "Text",ExpressionUUID->"29602888-c96d-445d-b6b2-9f07ec6bfdbd"],
Cell[60354, 1528, 81, 0, 28, "Input",ExpressionUUID->"8f099f28-bfcf-48c0-9c13-c009009c0615"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60472, 1533, 156, 3, 67, "Section",ExpressionUUID->"53360077-b126-4736-89d5-442e353af9f0"],
Cell[60631, 1538, 2716, 64, 143, "Text",ExpressionUUID->"fd8fe25a-0bda-453f-93cc-c04259d41a4f"],
Cell[CellGroupData[{
Cell[63372, 1606, 830, 24, 28, "Input",ExpressionUUID->"4bd9f210-323d-4a4f-b43a-b1de8b814ba5"],
Cell[64205, 1632, 339, 8, 32, "Output",ExpressionUUID->"3637c441-a2a3-479c-a312-5bf01b2c8a9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64581, 1645, 847, 25, 28, "Input",ExpressionUUID->"0a47456d-24cc-4094-918c-f61c99e9ddda"],
Cell[65431, 1672, 769, 23, 48, "Output",ExpressionUUID->"8170cd47-fda4-4132-ab5e-b151e700fe70"]
}, Open  ]],
Cell[66215, 1698, 174, 3, 35, "Text",ExpressionUUID->"214f9a1e-3abb-4bbf-8f42-d3410acb9e03"],
Cell[CellGroupData[{
Cell[66414, 1705, 704, 19, 28, "Input",ExpressionUUID->"33d0a944-7af0-49b8-af43-329e077e7292"],
Cell[67121, 1726, 710, 22, 48, "Output",ExpressionUUID->"72af237d-e6f5-462e-a00a-588cc62a0cc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67868, 1753, 2498, 68, 169, "Input",ExpressionUUID->"906829fe-1d93-4ce2-9e53-737646486195"],
Cell[70369, 1823, 65491, 1132, 251, "Output",ExpressionUUID->"4799de4b-a639-4c6f-a924-612cdf111e67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135897, 2960, 2502, 68, 169, "Input",ExpressionUUID->"7d63c643-f572-4ee4-aee8-b7a05a73779c"],
Cell[138402, 3030, 63635, 1102, 243, "Output",ExpressionUUID->"82a3fa7e-83d6-4c3b-9569-4214a12189a2"]
}, Open  ]],
Cell[202052, 4135, 590, 15, 37, "Text",ExpressionUUID->"fea2a037-a71d-4f07-a329-c36f8fd39f04"],
Cell[CellGroupData[{
Cell[202667, 4154, 1571, 41, 112, "Input",ExpressionUUID->"204b5ccf-4419-4c33-b305-d5aa7ac5b8bd"],
Cell[204241, 4197, 53943, 907, 242, "Output",ExpressionUUID->"29ddebef-d844-409c-bcde-4df719bf5853"]
}, Open  ]],
Cell[258199, 5107, 3924, 91, 204, "Text",ExpressionUUID->"6f4f01aa-4b22-462a-b964-f43208a0e791"]
}, Open  ]]
}, Open  ]]
}
]
*)

